{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\RecordList\\\\DailyExpense.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Fragment } from 'react';\nimport dva, { connect } from 'dva';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar DailyExpense = function (_React$PureComponent) {\n  _inherits(DailyExpense, _React$PureComponent);\n\n  var _super = _createSuper(DailyExpense);\n\n  function DailyExpense() {\n    var _this;\n\n    _classCallCheck(this, DailyExpense);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this.renderItem = function (item) {\n      return React.createElement(TouchableOpacity, {\n        key: item.key,\n        style: styles.taskListContent,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          marginLeft: 13\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 12,\n          width: 12,\n          borderRadius: 6,\n          backgroundColor: item.color,\n          marginRight: 8\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: '#554A4C',\n          fontSize: 20\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, item.category, \":\", item.item)), React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginLeft: 20\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#BBBBBB',\n          fontSize: 14\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, item.notes)))));\n    };\n\n    return _this;\n  }\n\n  _createClass(DailyExpense, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          todoList = _this$props.todoList,\n          currentDate = _this$props.currentDate;\n      return React.createElement(View, {\n        style: {\n          width: '100%',\n          height: Dimensions.get('window').height - 170\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: {\n          paddingBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, todoList.map(function (item) {\n        return _this2.renderItem(item);\n      })));\n    }\n  }]);\n\n  return DailyExpense;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(DailyExpense);\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  },\n  viewTask: {\n    position: 'absolute',\n    top: 0,\n    right: 17,\n    height: 50,\n    width: 50,\n    backgroundColor: 'orange',\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#2E66E7',\n    shadowOpacity: 0.5,\n    elevation: 5,\n    zIndex: 999\n  }\n});","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/RecordList/DailyExpense.js"],"names":["React","useState","Fragment","dva","connect","DailyExpense","state","renderItem","item","key","styles","taskListContent","marginLeft","flexDirection","alignItems","height","width","borderRadius","backgroundColor","color","marginRight","fontSize","category","notes","props","todoList","currentDate","Dimensions","get","paddingBottom","map","PureComponent","loading","effects","StyleSheet","create","calendar","marginBottom","text","textAlign","padding","viewTask","position","top","right","justifyContent","shadowColor","shadowOpacity","elevation","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { StyleSheet, View, Image, SafeAreaView, Text, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\r\nclass DailyExpense extends React.PureComponent {\r\n  state = {\r\n\r\n  }\r\n  renderItem = (item) => {\r\n    return (\r\n      <TouchableOpacity\r\n\r\n        key={item.key}\r\n        style={styles.taskListContent}\r\n      >\r\n        <View\r\n          style={{\r\n            marginLeft: 13,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                height: 12,\r\n                width: 12,\r\n                borderRadius: 6,\r\n                backgroundColor: item.color,\r\n                marginRight: 8,\r\n              }}\r\n            />\r\n            <Text\r\n              style={{\r\n                color: '#554A4C',\r\n                fontSize: 20,\r\n                // fontWeight: '700',\r\n              }}\r\n            >\r\n              {item.category}:{item.item}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                marginLeft: 20,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: '#BBBBBB',\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                {item.notes}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n  // Local path to file on the device\r\n  render() {\r\n    const { todoList, currentDate } = this.props;\r\n    return (\r\n      <View\r\n        style={{\r\n          width: '100%',\r\n          height: Dimensions.get('window').height - 170,\r\n        }}\r\n      >\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            paddingBottom: 20,\r\n          }}\r\n        >\r\n          {todoList.map(item => (\r\n            this.renderItem(item)\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(DailyExpense);\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'lightgrey',\r\n    fontSize: 16,\r\n  },\r\n  viewTask: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 17,\r\n    height: 50,\r\n    width: 50,\r\n    backgroundColor: 'orange',\r\n    borderRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    shadowColor: '#2E66E7',\r\n    // shadowOffset: {\r\n    //   width: 0,\r\n    //   height: 5,\r\n    // },\r\n    // shadowRadius: 30,\r\n    shadowOpacity: 0.5,\r\n    elevation: 5,\r\n    zIndex: 999,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}