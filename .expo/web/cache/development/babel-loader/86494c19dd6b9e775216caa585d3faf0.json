{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport dva, { connect } from 'dva';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport CalendarPage from \"./Calendar/CalendarPage\";\nimport SummaryPage from \"./Summary/SummaryPage\";\nimport AccountPage from \"./Account/AccountPage\";\nimport CreateTask from \"./Calendar/CreateTaskPage.js\";\n\nfunction Calendar() {\n  return React.createElement(CalendarPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction Summary() {\n  return React.createElement(SummaryPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction Account() {\n  return React.createElement(AccountPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction MyTabs() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Calendar\",\n    tabBarOptions: {\n      activeTintColor: '#e91e63'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Calendar\",\n    component: Calendar,\n    options: {\n      tabBarLabel: 'Calendar',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Summary\",\n    component: Summary,\n    options: {\n      tabBarLabel: 'Summary',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"bell\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: Account,\n    options: {\n      tabBarLabel: 'Account',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Tab = createBottomTabNavigator(MyTabs);\nvar StackNavigator = createStackNavigator({\n  Home: {\n    screen: Tab\n  },\n  CreateTask: {\n    screen: CreateTask\n  }\n}, {\n  initialRouteName: 'CreateTask'\n});\nvar StackNavigatorContainer = createAppContainer(StackNavigator);\n\nvar MainPage = function (_React$PureComponent) {\n  _inherits(MainPage, _React$PureComponent);\n\n  var _super = _createSuper(MainPage);\n\n  function MainPage() {\n    var _this2;\n\n    _classCallCheck(this, MainPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {};\n    return _this2;\n  }\n\n  _createClass(MainPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }, React.createElement(StackNavigatorContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MainPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(MainPage);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Main.js"],"names":["React","dva","connect","NavigationContainer","createStackNavigator","createAppContainer","createBottomTabNavigator","MaterialCommunityIcons","CalendarPage","SummaryPage","AccountPage","CreateTask","Calendar","Summary","Account","MyTabs","activeTintColor","tabBarLabel","tabBarIcon","color","size","Tab","StackNavigator","Home","screen","initialRouteName","StackNavigatorContainer","MainPage","state","props","dispatch","effects","PureComponent","loading"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nimport CalendarPage from './Calendar/CalendarPage';\r\nimport SummaryPage from './Summary/SummaryPage';\r\nimport AccountPage from './Account/AccountPage';\r\nimport CreateTask from './Calendar/CreateTaskPage.js';\r\n\r\nfunction Calendar() {\r\n  return (\r\n    <CalendarPage></CalendarPage>\r\n  );\r\n}\r\n\r\nfunction Summary() {\r\n  return (\r\n    <SummaryPage></SummaryPage>\r\n  );\r\n}\r\n\r\nfunction Account() {\r\n  return (\r\n    <AccountPage></AccountPage>\r\n  );\r\n}\r\n\r\nfunction MyTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Calendar\"\r\n      tabBarOptions={{\r\n        activeTintColor: '#e91e63',\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Calendar\"\r\n        component={Calendar}\r\n        options={{\r\n          tabBarLabel: 'Calendar',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Summary\"\r\n        component={Summary}\r\n        options={{\r\n          tabBarLabel: 'Summary',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Account\"\r\n        component={Account}\r\n        options={{\r\n          tabBarLabel: 'Account',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"account\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator(MyTabs);\r\nconst StackNavigator = createStackNavigator({\r\n  Home: { screen: Tab },\r\n  CreateTask: { screen: CreateTask, },\r\n},\r\n  {\r\n    initialRouteName: 'CreateTask',\r\n  });\r\n\r\nconst StackNavigatorContainer = createAppContainer(StackNavigator);\r\nclass MainPage extends React.PureComponent {\r\n  state = {\r\n\r\n  }\r\n\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    return (\r\n      <NavigationContainer>\r\n        {/* <MyTabs /> */}\r\n        <StackNavigatorContainer />\r\n      </NavigationContainer>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(MainPage);"]},"metadata":{},"sourceType":"module"}