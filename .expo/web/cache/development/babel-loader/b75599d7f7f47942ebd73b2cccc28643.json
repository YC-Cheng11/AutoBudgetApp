{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CreateTaskPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dva, { connect } from 'dva';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { CalendarList } from 'react-native-calendars';\nimport moment from 'moment';\nimport * as Calendar from 'expo-calendar';\nimport * as Localization from 'expo-localization';\nimport Constants from 'expo-constants';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport uuid from 'uuid';\nimport { Context } from \"../../utils/Context\";\nvar styles = StyleSheet.create({\n  createTaskButton: {\n    width: 252,\n    height: 48,\n    alignSelf: 'center',\n    marginTop: 40,\n    borderRadius: 5,\n    justifyContent: 'center'\n  },\n  seperator: {\n    height: 0.5,\n    width: '100%',\n    backgroundColor: '#979797',\n    alignSelf: 'center',\n    marginVertical: 20\n  },\n  notes: {\n    color: '#9CAAC4',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  notesContent: {\n    height: 0.5,\n    width: '100%',\n    backgroundColor: '#979797',\n    alignSelf: 'center',\n    marginVertical: 20\n  },\n  learn: {\n    height: 23,\n    width: 51,\n    backgroundColor: '#F8D557',\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  design: {\n    height: 23,\n    width: 59,\n    backgroundColor: '#62CCFB',\n    justifyContent: 'center',\n    borderRadius: 5,\n    marginRight: 7\n  },\n  readBook: {\n    height: 23,\n    width: 83,\n    backgroundColor: '#4CD565',\n    justifyContent: 'center',\n    borderRadius: 5,\n    marginRight: 7\n  },\n  title: {\n    height: 25,\n    borderColor: '#5DD976',\n    borderLeftWidth: 1,\n    paddingLeft: 8,\n    fontSize: 19\n  },\n  taskContainer: {\n    height: 400,\n    width: 327,\n    alignSelf: 'center',\n    borderRadius: 20,\n    shadowColor: '#2E66E7',\n    backgroundColor: '#ffffff',\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    shadowRadius: 20,\n    shadowOpacity: 0.2,\n    elevation: 5,\n    padding: 22\n  },\n  calenderContainer: {\n    marginTop: 30,\n    width: 350,\n    height: 350,\n    alignSelf: 'center'\n  },\n  newTask: {\n    alignSelf: 'center',\n    fontSize: 20,\n    width: 120,\n    height: 25,\n    textAlign: 'center'\n  },\n  backButton: {\n    flexDirection: 'row',\n    marginTop: 60,\n    width: '100%',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#eaeef7'\n  }\n});\n\nvar CreateTask = function (_React$PureComponent) {\n  _inherits(CreateTask, _React$PureComponent);\n\n  var _super = _createSuper(CreateTask);\n\n  function CreateTask() {\n    var _this;\n\n    _classCallCheck(this, CreateTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isDateTimePickerVisible: false,\n      visibleHeight: Dimensions.get('window').height,\n      currentDay: moment().format(),\n      selectedDay: _defineProperty({}, moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD'), {\n        selected: true,\n        selectedColor: '#2E66E7'\n      })\n    };\n\n    _this._keyboardDidShow = function (e) {\n      _this.setState({\n        keyboardHeight: e.endCoordinates.height,\n        visibleHeight: Dimensions.get('window').height - e.endCoordinates.height - 30\n      });\n    };\n\n    _this._keyboardDidHide = function () {\n      _this.setState({\n        visibleHeight: Dimensions.get('window').height\n      });\n    };\n\n    _this._showDateTimePicker = function () {\n      return _this.setState({\n        isDateTimePickerVisible: true\n      });\n    };\n\n    _this._hideDateTimePicker = function () {\n      return _this.setState({\n        isDateTimePickerVisible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateTask, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Keyboard.removeListener('keyboardDidShow', this._keyboardDidShow);\n      Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      var _this$state = this.state,\n          isDateTimePickerVisible = _this$state.isDateTimePickerVisible,\n          visibleHeight = _this$state.visibleHeight,\n          currentDay = _this$state.currentDay,\n          selectedDay = _this$state.selectedDay,\n          taskText = _this$state.taskText;\n      console.log(this.props);\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }\n      }, React.createElement(Context.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, function (value) {\n        return React.createElement(React.Fragment, null, React.createElement(DateTimePicker, {\n          isVisible: isDateTimePickerVisible,\n          onConfirm: _this2._handleDatePicked,\n          onCancel: _this2._hideDateTimePicker,\n          mode: \"time\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: styles.container,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            height: visibleHeight\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        }, React.createElement(ScrollView, {\n          contentContainerStyle: {\n            paddingBottom: 100\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: styles.calenderContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        }, React.createElement(CalendarList, {\n          style: {\n            width: 350,\n            height: 350\n          },\n          current: currentDay,\n          minDate: moment().format(),\n          horizontal: true,\n          pastScrollRange: 0,\n          pagingEnabled: true,\n          calendarWidth: 350,\n          onDayPress: function onDayPress(day) {\n            _this2.setState({\n              selectedDay: _defineProperty({}, day.dateString, {\n                selected: true,\n                selectedColor: '#2E66E7'\n              }),\n              currentDay: day.dateString,\n              alarmTime: day.dateString\n            });\n          },\n          monthFormat: \"yyyy MMMM\",\n          hideArrows: true,\n          markingType: \"simple\",\n          theme: {\n            selectedDayBackgroundColor: '#2E66E7',\n            selectedDayTextColor: '#ffffff',\n            todayTextColor: '#2E66E7',\n            backgroundColor: '#eaeef7',\n            calendarBackground: '#eaeef7',\n            textDisabledColor: '#d9dbe0'\n          },\n          markedDates: selectedDay,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 23\n          }\n        })), React.createElement(View, {\n          style: styles.taskContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: styles.title,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              taskText: text\n            });\n          },\n          value: taskText,\n          placeholder: \"What do you need to do?\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 23\n          }\n        }), React.createElement(Text, {\n          style: {\n            fontSize: 14,\n            color: '#BDC6D8',\n            marginVertical: 10\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 23\n          }\n        }, \"Suggestion\"), React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: styles.readBook,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 27\n          }\n        }, \"Read book\")), React.createElement(View, {\n          style: styles.design,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 27\n          }\n        }, \"Design\")), React.createElement(View, {\n          style: styles.learn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 27\n          }\n        }, \"Learn\"))), React.createElement(View, {\n          style: styles.notesContent,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 23\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.notes,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }\n        }, \"Notes\"), React.createElement(TextInput, {\n          style: {\n            height: 25,\n            fontSize: 19,\n            marginTop: 3\n          },\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              notesText: text\n            });\n          },\n          value: notesText,\n          placeholder: \"Enter notes about the task.\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          style: styles.seperator,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 23\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#9CAAC4',\n            fontSize: 16,\n            fontWeight: '600'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }\n        }, \"Times\"), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2._showDateTimePicker();\n          },\n          style: {\n            height: 25,\n            marginTop: 3\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 19\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 27\n          }\n        }, moment(alarmTime).format('h:mm A')))), React.createElement(View, {\n          style: styles.seperator,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 23\n          }\n        }), React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#9CAAC4',\n            fontSize: 16,\n            fontWeight: '600'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 27\n          }\n        }, \"Alarm\"), React.createElement(View, {\n          style: {\n            height: 25,\n            marginTop: 3\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 19\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }\n        }, moment(alarmTime).format('h:mm A')))), React.createElement(Switch, {\n          value: isAlarmSet,\n          onValueChange: _this2.handleAlarmSet,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }\n        }))), React.createElement(TouchableOpacity, {\n          disabled: taskText === '',\n          style: [styles.createTaskButton, {\n            backgroundColor: taskText === '' ? 'rgba(46, 102, 231,0.5)' : '#2E66E7'\n          }],\n          onPress: function _callee() {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!isAlarmSet) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(_this2.synchronizeCalendar(value));\n\n                  case 3:\n                    if (!isAlarmSet) {\n                      _this2._handleCreateEventData(value);\n                    }\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            textAlign: 'center',\n            color: '#fff'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 23\n          }\n        }, \"ADD YOUR TASK\"))))));\n      }));\n    }\n  }]);\n\n  return CreateTask;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CreateTask);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CreateTaskPage.js"],"names":["React","Component","dva","connect","CalendarList","moment","Calendar","Localization","Constants","DateTimePicker","uuid","Context","styles","StyleSheet","create","createTaskButton","width","height","alignSelf","marginTop","borderRadius","justifyContent","seperator","backgroundColor","marginVertical","notes","color","fontSize","fontWeight","notesContent","learn","design","marginRight","readBook","title","borderColor","borderLeftWidth","paddingLeft","taskContainer","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","padding","calenderContainer","newTask","textAlign","backButton","flexDirection","alignItems","container","flex","paddingTop","statusBarHeight","CreateTask","state","isDateTimePickerVisible","visibleHeight","Dimensions","get","currentDay","format","selectedDay","selected","selectedColor","_keyboardDidShow","e","setState","keyboardHeight","endCoordinates","_keyboardDidHide","_showDateTimePicker","_hideDateTimePicker","Keyboard","removeListener","props","dispatch","effects","taskText","console","log","value","_handleDatePicked","paddingBottom","day","dateString","alarmTime","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","calendarBackground","textDisabledColor","text","notesText","isAlarmSet","handleAlarmSet","synchronizeCalendar","_handleCreateEventData","PureComponent","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport {\r\n  Text,\r\n  Image,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  ScrollView,\r\n  TextInput,\r\n  Keyboard,\r\n  Switch,\r\n  StyleSheet,\r\n  Alert,\r\n} from 'react-native';\r\nimport { CalendarList } from 'react-native-calendars';\r\nimport moment from 'moment';\r\nimport * as Calendar from 'expo-calendar';\r\nimport * as Localization from 'expo-localization';\r\nimport Constants from 'expo-constants';\r\nimport DateTimePicker from 'react-native-modal-datetime-picker';\r\nimport uuid from 'uuid';\r\nimport { Context } from '../../utils/Context';\r\n\r\nconst styles = StyleSheet.create({\r\n  createTaskButton: {\r\n    width: 252,\r\n    height: 48,\r\n    alignSelf: 'center',\r\n    marginTop: 40,\r\n    borderRadius: 5,\r\n    justifyContent: 'center',\r\n  },\r\n  seperator: {\r\n    height: 0.5,\r\n    width: '100%',\r\n    backgroundColor: '#979797',\r\n    alignSelf: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  notes: {\r\n    color: '#9CAAC4',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  notesContent: {\r\n    height: 0.5,\r\n    width: '100%',\r\n    backgroundColor: '#979797',\r\n    alignSelf: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  learn: {\r\n    height: 23,\r\n    width: 51,\r\n    backgroundColor: '#F8D557',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n  },\r\n  design: {\r\n    height: 23,\r\n    width: 59,\r\n    backgroundColor: '#62CCFB',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n    marginRight: 7,\r\n  },\r\n  readBook: {\r\n    height: 23,\r\n    width: 83,\r\n    backgroundColor: '#4CD565',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n    marginRight: 7,\r\n  },\r\n  title: {\r\n    height: 25,\r\n    borderColor: '#5DD976',\r\n    borderLeftWidth: 1,\r\n    paddingLeft: 8,\r\n    fontSize: 19,\r\n  },\r\n  taskContainer: {\r\n    height: 400,\r\n    width: 327,\r\n    alignSelf: 'center',\r\n    borderRadius: 20,\r\n    shadowColor: '#2E66E7',\r\n    backgroundColor: '#ffffff',\r\n    shadowOffset: {\r\n      width: 3,\r\n      height: 3,\r\n    },\r\n    shadowRadius: 20,\r\n    shadowOpacity: 0.2,\r\n    elevation: 5,\r\n    padding: 22,\r\n  },\r\n  calenderContainer: {\r\n    marginTop: 30,\r\n    width: 350,\r\n    height: 350,\r\n    alignSelf: 'center',\r\n  },\r\n  newTask: {\r\n    alignSelf: 'center',\r\n    fontSize: 20,\r\n    width: 120,\r\n    height: 25,\r\n    textAlign: 'center',\r\n  },\r\n  backButton: {\r\n    flexDirection: 'row',\r\n    marginTop: 60,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#eaeef7',\r\n  },\r\n});\r\nclass CreateTask extends React.PureComponent {\r\n  state = {\r\n    isDateTimePickerVisible: false,\r\n    visibleHeight: Dimensions.get('window').height,\r\n    currentDay: moment().format(),\r\n    selectedDay: {\r\n      [`${moment().format('YYYY')}-${moment().format('MM')}-${moment().format(\r\n        'DD'\r\n      )}`]: {\r\n        selected: true,\r\n        selectedColor: '#2E66E7',\r\n      },\r\n    },\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Keyboard.removeListener('keyboardDidShow', this._keyboardDidShow);\r\n    Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);\r\n  }\r\n\r\n  _keyboardDidShow = e => {\r\n    this.setState({\r\n      keyboardHeight: e.endCoordinates.height,\r\n      visibleHeight:\r\n        Dimensions.get('window').height - e.endCoordinates.height - 30,\r\n    });\r\n  };\r\n\r\n  _keyboardDidHide = () => {\r\n    this.setState({\r\n      visibleHeight: Dimensions.get('window').height,\r\n    });\r\n  };\r\n  _showDateTimePicker = () => this.setState({ isDateTimePickerVisible: true });\r\n\r\n  _hideDateTimePicker = () => this.setState({ isDateTimePickerVisible: false });\r\n\r\n\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    const { isDateTimePickerVisible, visibleHeight, currentDay, selectedDay, taskText } = this.state;\r\n    console.log(this.props);\r\n    return (\r\n      <SafeAreaView style={{ flex: 1, flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Context.Consumer>\r\n          {value => (\r\n            <>\r\n              <DateTimePicker\r\n                isVisible={isDateTimePickerVisible}\r\n                onConfirm={this._handleDatePicked}\r\n                onCancel={this._hideDateTimePicker}\r\n                mode=\"time\"\r\n              />\r\n\r\n              <View style={styles.container}>\r\n                <View\r\n                  style={{\r\n                    height: visibleHeight,\r\n                  }}\r\n                >\r\n                  <ScrollView\r\n                    contentContainerStyle={{\r\n                      paddingBottom: 100,\r\n                    }}\r\n                  >\r\n                    <View style={styles.calenderContainer}>\r\n                      <CalendarList\r\n                        style={{\r\n                          width: 350,\r\n                          height: 350,\r\n                        }}\r\n                        current={currentDay}\r\n                        minDate={moment().format()}\r\n                        horizontal\r\n                        pastScrollRange={0}\r\n                        pagingEnabled\r\n                        calendarWidth={350}\r\n                        onDayPress={day => {\r\n                          this.setState({\r\n                            selectedDay: {\r\n                              [day.dateString]: {\r\n                                selected: true,\r\n                                selectedColor: '#2E66E7',\r\n                              },\r\n                            },\r\n                            currentDay: day.dateString,\r\n                            alarmTime: day.dateString,\r\n                          });\r\n                        }}\r\n                        monthFormat=\"yyyy MMMM\"\r\n                        hideArrows\r\n                        markingType=\"simple\"\r\n                        theme={{\r\n                          selectedDayBackgroundColor: '#2E66E7',\r\n                          selectedDayTextColor: '#ffffff',\r\n                          todayTextColor: '#2E66E7',\r\n                          backgroundColor: '#eaeef7',\r\n                          calendarBackground: '#eaeef7',\r\n                          textDisabledColor: '#d9dbe0',\r\n                        }}\r\n                        markedDates={selectedDay}\r\n                      />\r\n                    </View>\r\n                    <View style={styles.taskContainer}>\r\n                      <TextInput\r\n                        style={styles.title}\r\n                        onChangeText={text => this.setState({ taskText: text })}\r\n                        value={taskText}\r\n                        placeholder=\"What do you need to do?\"\r\n                      />\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 14,\r\n                          color: '#BDC6D8',\r\n                          marginVertical: 10,\r\n                        }}\r\n                      >\r\n                        Suggestion\r\n                    </Text>\r\n                      <View style={{ flexDirection: 'row' }}>\r\n                        <View style={styles.readBook}>\r\n                          <Text style={{ textAlign: 'center', fontSize: 14 }}>\r\n                            Read book\r\n                        </Text>\r\n                        </View>\r\n                        <View style={styles.design}>\r\n                          <Text style={{ textAlign: 'center', fontSize: 14 }}>\r\n                            Design\r\n                        </Text>\r\n                        </View>\r\n                        <View style={styles.learn}>\r\n                          <Text style={{ textAlign: 'center', fontSize: 14 }}>\r\n                            Learn\r\n                        </Text>\r\n                        </View>\r\n                      </View>\r\n                      <View style={styles.notesContent} />\r\n                      <View>\r\n                        <Text style={styles.notes}>Notes</Text>\r\n                        <TextInput\r\n                          style={{\r\n                            height: 25,\r\n                            fontSize: 19,\r\n                            marginTop: 3,\r\n                          }}\r\n                          onChangeText={text =>\r\n                            this.setState({ notesText: text })\r\n                          }\r\n                          value={notesText}\r\n                          placeholder=\"Enter notes about the task.\"\r\n                        />\r\n                      </View>\r\n                      <View style={styles.seperator} />\r\n                      <View>\r\n                        <Text\r\n                          style={{\r\n                            color: '#9CAAC4',\r\n                            fontSize: 16,\r\n                            fontWeight: '600',\r\n                          }}\r\n                        >\r\n                          Times\r\n                      </Text>\r\n                        <TouchableOpacity\r\n                          onPress={() => this._showDateTimePicker()}\r\n                          style={{\r\n                            height: 25,\r\n                            marginTop: 3,\r\n                          }}\r\n                        >\r\n                          <Text style={{ fontSize: 19 }}>\r\n                            {moment(alarmTime).format('h:mm A')}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                      <View style={styles.seperator} />\r\n                      <View\r\n                        style={{\r\n                          flexDirection: 'row',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                        }}\r\n                      >\r\n                        <View>\r\n                          <Text\r\n                            style={{\r\n                              color: '#9CAAC4',\r\n                              fontSize: 16,\r\n                              fontWeight: '600',\r\n                            }}\r\n                          >\r\n                            Alarm\r\n                        </Text>\r\n                          <View\r\n                            style={{\r\n                              height: 25,\r\n                              marginTop: 3,\r\n                            }}\r\n                          >\r\n                            <Text style={{ fontSize: 19 }}>\r\n                              {moment(alarmTime).format('h:mm A')}\r\n                            </Text>\r\n                          </View>\r\n                        </View>\r\n                        <Switch\r\n                          value={isAlarmSet}\r\n                          onValueChange={this.handleAlarmSet}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                    <TouchableOpacity\r\n                      disabled={taskText === ''}\r\n                      style={[\r\n                        styles.createTaskButton,\r\n                        {\r\n                          backgroundColor:\r\n                            taskText === ''\r\n                              ? 'rgba(46, 102, 231,0.5)'\r\n                              : '#2E66E7',\r\n                        },\r\n                      ]}\r\n                      onPress={async () => {\r\n                        if (isAlarmSet) {\r\n                          await this.synchronizeCalendar(value);\r\n                        }\r\n                        if (!isAlarmSet) {\r\n                          this._handleCreateEventData(value);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 18,\r\n                          textAlign: 'center',\r\n                          color: '#fff',\r\n                        }}\r\n                      >\r\n                        ADD YOUR TASK\r\n                    </Text>\r\n                    </TouchableOpacity>\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </>\r\n          )}\r\n        </Context.Consumer>\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CreateTask);"]},"metadata":{},"sourceType":"module"}