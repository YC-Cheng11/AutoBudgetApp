{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\node_modules\\\\react-native-select-lists\\\\src\\\\select.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Caret from \"./caret\";\nimport List from \"./list\";\nvar window = Dimensions.get('window');\n\nvar Select = function (_Component) {\n  _inherits(Select, _Component);\n\n  var _super = _createSuper(Select);\n\n  function Select(props) {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    _this = _super.call(this, props);\n    var defaultValue = props.default;\n\n    if (!defaultValue) {\n      defaultValue = props.children[0].props.children;\n    }\n\n    _this.onOptionPressed = _this.onOptionPressed.bind(_assertThisInitialized(_this));\n    _this.state = {\n      value: defaultValue,\n      visible: 0,\n      listHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"onOptionPressed\",\n    value: function onOptionPressed(value, text) {\n      this.setState({\n        visible: false,\n        value: text\n      });\n      this.props.onSelect(value, text);\n    }\n  }, {\n    key: \"toggleVisibility\",\n    value: function toggleVisibility() {\n      this.setState({\n        visible: this.state.visible ? 0 : 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          padding = _this$props.padding,\n          caret = _this$props.caret;\n      var offset = 2 * padding;\n\n      if (caret) {\n        if (typeof caret !== \"string\") {\n          try {\n            offset += caret.props.style.width;\n          } catch (error) {\n            console.error('Add style with width and height to caret image.');\n          }\n        } else {\n          offset += 15;\n        }\n      }\n\n      return React.createElement(View, {\n        style: [styles.container, {\n          zIndex: this.props.zIndex + this.state.visible,\n          paddingBottom: this.state.visible && Platform.OS === 'android' ? this.props.listHeight : 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.toggleVisibility.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        ref: function ref(view) {\n          _this2.select = view;\n        },\n        style: [styles.select, this.props.selectStyle, {\n          paddingHorizontal: padding\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [this.props.selectTextStyle, {\n          width: 222 - offset\n        }],\n        numberOfLines: 1,\n        lineBreakMode: \"tail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, this.state.value), React.createElement(Caret, {\n        element: caret,\n        size: this.props.caretSize,\n        color: this.props.caretColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }))), this.state.visible ? React.createElement(List, {\n        style: this.props.listStyle,\n        select: this.select,\n        height: this.props.listHeight,\n        position: this.props.listPosition,\n        onOverlayPress: this.toggleVisibility.bind(this),\n        onOptionPressed: this.onOptionPressed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, this.props.children) : null);\n    }\n  }]);\n\n  return Select;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch'\n  },\n  select: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    height: 40,\n    backgroundColor: '#efefef',\n    borderRadius: 2\n  },\n  labelContainer: {\n    justifyContent: 'center',\n    height: 25,\n    backgroundColor: 'transparent'\n  }\n});\nSelect.propTypes = {\n  listHeight: PropTypes.number,\n  listPosition: PropTypes.oneOf(['down', 'up']),\n  padding: PropTypes.number,\n  zIndex: PropTypes.number,\n  onSelect: PropTypes.func\n};\nSelect.defaultProps = {\n  listHeight: 100,\n  listPosition: 'down',\n  padding: 10,\n  zIndex: 999,\n  onSelect: function onSelect() {}\n};\nmodule.exports = Select;","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/node_modules/react-native-select-lists/src/select.js"],"names":["React","Component","PropTypes","Caret","List","window","Dimensions","get","Select","props","defaultValue","default","children","onOptionPressed","bind","state","value","visible","listHeight","text","setState","onSelect","padding","caret","offset","style","width","error","console","styles","container","zIndex","paddingBottom","Platform","OS","toggleVisibility","view","select","selectStyle","paddingHorizontal","selectTextStyle","caretSize","caretColor","listStyle","listPosition","StyleSheet","create","alignSelf","flexDirection","justifyContent","alignItems","height","backgroundColor","borderRadius","labelContainer","propTypes","number","oneOf","func","defaultProps","module","exports"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, View, Text, Dimensions, Platform, TouchableWithoutFeedback } from 'react-native';\n\nimport Caret from './caret';\nimport List from './list';\n\nconst window = Dimensions.get('window');\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n\n    let defaultValue = props.default;\n\n    if (!defaultValue) {\n      defaultValue = props.children[0].props.children;\n    }\n\n    this.onOptionPressed = this.onOptionPressed.bind(this);\n\n    this.state = {\n      value: defaultValue,\n      visible: 0,\n      listHeight: 0,\n    }\n  }\n\n  onOptionPressed(value, text) {\n    this.setState({\n      visible: false,\n      value: text,\n    });\n\n    this.props.onSelect(value, text);\n  }\n\n  toggleVisibility() {\n    this.setState({visible: this.state.visible ? 0 : 1});\n  }\n\n  render() {\n    const { padding, caret } = this.props;\n\n    let offset = 2*padding;\n\n    if (caret) {\n      if (typeof(caret) !== \"string\") {\n        try {\n          offset += caret.props.style.width;\n        } catch(error) {\n          console.error('Add style with width and height to caret image.');\n        }\n      } else {\n        offset += 15;\n      }\n    }\n\n    return (\n      <View\n        style={[styles.container, {zIndex: this.props.zIndex + this.state.visible, paddingBottom: this.state.visible && Platform.OS === 'android' ? this.props.listHeight : 0}]}>\n        <TouchableWithoutFeedback\n          onPress={this.toggleVisibility.bind(this)}\n          >\n          <View\n            ref={(view) => { this.select = view; }}\n            style={[styles.select, this.props.selectStyle, {paddingHorizontal: padding}]}\n            >\n            <Text\n              style={[this.props.selectTextStyle, {width: 222 - offset}]}\n              numberOfLines={1}\n              lineBreakMode='tail'\n            >{ this.state.value }</Text>\n            <Caret element={caret} size={this.props.caretSize} color={this.props.caretColor} />\n          </View>\n        </TouchableWithoutFeedback>\n        {\n          this.state.visible ?\n            <List\n              style={this.props.listStyle}\n              select={this.select}\n              height={this.props.listHeight}\n              position={this.props.listPosition}\n              onOverlayPress={this.toggleVisibility.bind(this)}\n              onOptionPressed={this.onOptionPressed}\n              >\n              { this.props.children }\n            </List>\n            :\n            null\n        }\n        </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n  },\n  select: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    height: 40,\n    backgroundColor: '#efefef',\n    borderRadius: 2,\n  },\n  labelContainer: {\n    justifyContent: 'center',\n    height: 25,\n    backgroundColor: 'transparent',\n  },\n});\n\nSelect.propTypes = {\n  listHeight: PropTypes.number,\n  listPosition: PropTypes.oneOf(['down', 'up']),\n  padding: PropTypes.number,\n  zIndex: PropTypes.number,\n  onSelect: PropTypes.func\n};\n\nSelect.defaultProps = {\n  listHeight: 100,\n  listPosition: 'down',\n  padding: 10,\n  zIndex: 999,\n  onSelect: () => { }\n};\n\nmodule.exports = Select;\n"]},"metadata":{},"sourceType":"module"}