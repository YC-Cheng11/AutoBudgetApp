{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CalendarPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Fragment } from 'react';\nimport dva, { connect } from 'dva';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport RecordPage from \"../RecordList/RecordPage\";\n\nvar CalendarPage = function (_React$PureComponent) {\n  _inherits(CalendarPage, _React$PureComponent);\n\n  var _super = _createSuper(CalendarPage);\n\n  function CalendarPage() {\n    var _this;\n\n    _classCallCheck(this, CalendarPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selected: '',\n      datesWhitelist: [{\n        start: moment(),\n        end: moment().add(365, 'days')\n      }],\n      todoList: [],\n      monthlyList: [],\n      markedDate: [],\n      currentDate: moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD'),\n      isModalVisible: false,\n      selectedTask: null,\n      isDateTimePickerVisible: false\n    };\n\n    _this._handleDeletePreviousDayTask = function _callee() {\n      var currentDate, value, todoList, todayDate;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currentDate = _this.state.currentDate;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 4:\n              value = _context.sent;\n\n              if (value !== null) {\n                todoList = JSON.parse(value);\n                todayDate = moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD');\n\n                _this._updateCurrentTask(currentDate);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this.onDayPress = function _callee2(day) {\n      var selectedDate;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              selectedDate = day.dateString;\n\n              _this._updateCurrentTask(selectedDate);\n\n              _this.setState({\n                currentDate: selectedDate,\n                selected: selectedDate\n              });\n\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('currentDate', selectedDate));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getDisabledDates = function (startDate, endDate, daysToDisable) {\n      var disabledDates = {};\n      var start = moment(startDate);\n      var end = moment(endDate);\n\n      for (var m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\n        if (_.includes(daysToDisable, m.weekday())) {\n          disabledDates[m.format('YYYY-MM-DD')] = {\n            disabled: true\n          };\n        }\n      }\n\n      return disabledDates;\n    };\n\n    _this._updateCurrentTask = function _callee3(currentDate) {\n      var value, todoList, markDot, todoLists;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 3:\n              value = _context3.sent;\n\n              if (value !== null) {\n                todoList = JSON.parse(value);\n                markDot = todoList.map(function (item) {\n                  return item.markedDot;\n                });\n                todoLists = todoList.filter(function (item) {\n                  if (currentDate === item.date) {\n                    return true;\n                  }\n\n                  return false;\n                });\n\n                if (todoLists.length !== 0) {\n                  _this.setState({\n                    markedDate: markDot,\n                    todoList: todoLists[0].todoList,\n                    monthlyList: JSON.parse(value)\n                  });\n                } else {\n                  _this.setState({\n                    markedDate: markDot,\n                    todoList: [],\n                    monthlyList: JSON.parse(value)\n                  });\n                }\n              }\n\n              _context3.next = 9;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.renderCalendarWithSelectableDate = function () {\n      var _this$state = _this.state,\n          selected = _this$state.selected,\n          currentDate = _this$state.currentDate,\n          todoList = _this$state.todoList,\n          monthlyList = _this$state.monthlyList;\n      var navigation = _this.props.navigation;\n      return React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(Calendar, {\n        current: new Date(),\n        onDayPress: _this.onDayPress,\n        markedDates: _defineProperty({}, selected, {\n          selected: true,\n          disableTouchEvent: true,\n          selectedColor: 'orange',\n          selectedTextColor: 'white'\n        }),\n        theme: {\n          backgroundColor: 'grey',\n          calendarBackground: '#ffffff',\n          textSectionTitleColor: '#b6c1cd',\n          textSectionTitleDisabledColor: '#d9e1e8',\n          selectedDayBackgroundColor: '#00adf5',\n          selectedDayTextColor: '#ffffff',\n          todayTextColor: '#00adf5',\n          dayTextColor: '#2d4150',\n          textDisabledColor: '#d9e1e8',\n          dotColor: '#00adf5',\n          selectedDotColor: '#ffffff',\n          arrowColor: 'orange'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('createTask', {\n            screen: 'Expense',\n            params: {\n              currentDate: currentDate,\n              updateCurrentTask: _this._updateCurrentTask\n            }\n          });\n        },\n        style: styles.viewTask,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/plus.png\"),\n        style: {\n          height: 30,\n          width: 30\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }))), React.createElement(RecordPage, {\n        todoList: todoList,\n        monthlyList: monthlyList,\n        currentDate: currentDate,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(CalendarPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"here\");\n      console.log(this.state.currentDate);\n      this.onDayPress({\n        dateString: this.state.currentDate\n      });\n\n      this._handleDeletePreviousDayTask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }\n      }, this.renderCalendarWithSelectableDate());\n    }\n  }]);\n\n  return CalendarPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CalendarPage);\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  },\n  viewTask: {\n    position: 'absolute',\n    top: 0,\n    right: 17,\n    height: 50,\n    width: 50,\n    backgroundColor: 'orange',\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#2E66E7',\n    shadowOpacity: 0.5,\n    elevation: 5,\n    zIndex: 999\n  }\n});","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CalendarPage.js"],"names":["React","useState","Fragment","dva","connect","Calendar","moment","_","AsyncStorage","RecordPage","CalendarPage","state","selected","datesWhitelist","start","end","add","todoList","monthlyList","markedDate","currentDate","format","isModalVisible","selectedTask","isDateTimePickerVisible","_handleDeletePreviousDayTask","getItem","value","JSON","parse","todayDate","_updateCurrentTask","onDayPress","day","selectedDate","dateString","setState","setItem","getDisabledDates","startDate","endDate","daysToDisable","disabledDates","m","diff","includes","weekday","disabled","markDot","map","item","markedDot","todoLists","filter","date","length","renderCalendarWithSelectableDate","navigation","props","Date","disableTouchEvent","selectedColor","selectedTextColor","backgroundColor","calendarBackground","textSectionTitleColor","textSectionTitleDisabledColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","dotColor","selectedDotColor","arrowColor","navigate","screen","params","updateCurrentTask","styles","viewTask","require","height","width","console","log","PureComponent","loading","effects","StyleSheet","create","calendar","marginBottom","text","textAlign","padding","fontSize","position","top","right","borderRadius","justifyContent","alignItems","shadowColor","shadowOpacity","elevation","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { StyleSheet, View, Image, SafeAreaView, Text, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport RecordPage from '../RecordList/RecordPage';\r\n\r\n\r\n\r\nclass CalendarPage extends React.PureComponent {\r\n  state = {\r\n    selected: '',\r\n    datesWhitelist: [\r\n      {\r\n        start: moment(),\r\n        end: moment().add(365, 'days'), // total 4 days enabled\r\n      },\r\n    ],\r\n    todoList: [],\r\n    monthlyList: [],\r\n    markedDate: [],\r\n    currentDate: `${moment().format('YYYY')}-${moment().format(\r\n      'MM'\r\n    )}-${moment().format('DD')}`,\r\n    isModalVisible: false,\r\n    selectedTask: null,\r\n    isDateTimePickerVisible: false,\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"here\");\r\n    console.log(this.state.currentDate);\r\n    this.onDayPress({ dateString: this.state.currentDate });\r\n    this._handleDeletePreviousDayTask();\r\n  }\r\n\r\n  // componentDidUpdate(prevProps) {\r\n  //   // if (prevProps.route.params?.currentDate !== this.props.route.params?.currentDate) {\r\n  //   if (this.props.route.params?.currentDate) {\r\n  //     const result = this.props.route.params?.currentDate;\r\n  //     this._updateCurrentTask(result);\r\n  //   }\r\n  // }\r\n\r\n  _handleDeletePreviousDayTask = async () => {\r\n    const { currentDate } = this.state;\r\n    try {\r\n      const value = await AsyncStorage.getItem('TODO');\r\n\r\n      if (value !== null) {\r\n        const todoList = JSON.parse(value);\r\n        const todayDate = `${moment().format('YYYY')}-${moment().format(\r\n          'MM'\r\n        )}-${moment().format('DD')}`;\r\n        // const checkDate = moment(todayDate);\r\n        // await todoList.filter(item => {\r\n        //   const currDate = moment(item.date);\r\n        //   const checkedDate = checkDate.diff(currDate, 'days');\r\n        //   if (checkedDate > 0) {\r\n        //     item.todoList.forEach(async listValue => {\r\n        //       try {\r\n        //         await Calendar.deleteEventAsync(\r\n        //           listValue.alarm.createEventAsyncRes.toString()\r\n        //         );\r\n        //       } catch (error) {\r\n        //         console.log(error);\r\n        //       }\r\n        //     });\r\n        //     return false;\r\n        //   }\r\n        //   return true;\r\n        // });\r\n\r\n        // await AsyncStorage.setItem('TODO', JSON.stringify(updatedList));\r\n        this._updateCurrentTask(currentDate);\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n\r\n  onDayPress = async (day) => {\r\n    const selectedDate = day.dateString;\r\n    this._updateCurrentTask(selectedDate);\r\n    this.setState({\r\n      currentDate: selectedDate,\r\n      selected: selectedDate\r\n    });\r\n    await AsyncStorage.setItem('currentDate', selectedDate);\r\n  };\r\n\r\n  getDisabledDates = (startDate, endDate, daysToDisable) => {\r\n    const disabledDates = {};\r\n    const start = moment(startDate);\r\n    const end = moment(endDate);\r\n    for (let m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\r\n      if (_.includes(daysToDisable, m.weekday())) {\r\n        disabledDates[m.format('YYYY-MM-DD')] = { disabled: true };\r\n      }\r\n    }\r\n    return disabledDates;\r\n  };\r\n\r\n\r\n  _updateCurrentTask = async currentDate => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('TODO');\r\n      if (value !== null) {\r\n        const todoList = JSON.parse(value);\r\n        const markDot = todoList.map(item => item.markedDot);\r\n        const todoLists = todoList.filter(item => {\r\n          if (currentDate === item.date) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        if (todoLists.length !== 0) {\r\n          this.setState({\r\n            markedDate: markDot,\r\n            todoList: todoLists[0].todoList,\r\n            monthlyList: JSON.parse(value)\r\n          });\r\n        } else {\r\n          this.setState({\r\n            markedDate: markDot,\r\n            todoList: [],\r\n            monthlyList: JSON.parse(value)\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n  renderCalendarWithSelectableDate = () => {\r\n    const { selected, currentDate, todoList, monthlyList } = this.state;\r\n    const { navigation } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Fragment>\r\n          <Calendar\r\n            current={new Date()}\r\n            // hideExtraDays\r\n            onDayPress={this.onDayPress}\r\n            markedDates={{\r\n              [selected]: {\r\n                selected: true,\r\n                disableTouchEvent: true,\r\n                selectedColor: 'orange',\r\n                selectedTextColor: 'white',\r\n              },\r\n            }}\r\n            theme={{\r\n              backgroundColor: 'grey',\r\n              calendarBackground: '#ffffff',\r\n              textSectionTitleColor: '#b6c1cd',\r\n              textSectionTitleDisabledColor: '#d9e1e8',\r\n              selectedDayBackgroundColor: '#00adf5',\r\n              selectedDayTextColor: '#ffffff',\r\n              todayTextColor: '#00adf5',\r\n              dayTextColor: '#2d4150',\r\n              textDisabledColor: '#d9e1e8',\r\n              dotColor: '#00adf5',\r\n              selectedDotColor: '#ffffff',\r\n              arrowColor: 'orange',\r\n            }}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate('createTask', {\r\n                screen: 'Expense',\r\n                params: {\r\n                  currentDate,\r\n                  updateCurrentTask: this._updateCurrentTask\r\n                }\r\n              })\r\n            }\r\n            style={styles.viewTask}\r\n          >\r\n            <Image\r\n              source={require('../../assets/plus.png')}\r\n              style={{\r\n                height: 30,\r\n                width: 30,\r\n              }}\r\n            />\r\n          </TouchableOpacity></Fragment>\r\n        <RecordPage todoList={todoList} monthlyList={monthlyList} currentDate={currentDate} />\r\n      </Fragment>\r\n\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <SafeAreaView showsVerticalScrollIndicator={false} >\r\n        { this.renderCalendarWithSelectableDate()}\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CalendarPage);\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'lightgrey',\r\n    fontSize: 16,\r\n  },\r\n  viewTask: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 17,\r\n    height: 50,\r\n    width: 50,\r\n    backgroundColor: 'orange',\r\n    borderRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    shadowColor: '#2E66E7',\r\n    // shadowOffset: {\r\n    //   width: 0,\r\n    //   height: 5,\r\n    // },\r\n    // shadowRadius: 30,\r\n    shadowOpacity: 0.5,\r\n    elevation: 5,\r\n    zIndex: 999,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}