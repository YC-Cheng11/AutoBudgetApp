{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CalendarPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Fragment } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nvar _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n\nvar onDayPress = function onDayPress(day) {\n  setSelected(day.dateString);\n};\n\nvar getDisabledDates = function getDisabledDates(startDate, endDate, daysToDisable) {\n  var disabledDates = {};\n  var start = moment(startDate);\n  var end = moment(endDate);\n\n  for (var m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\n    if (_.includes(daysToDisable, m.weekday())) {\n      disabledDates[m.format('YYYY-MM-DD')] = {\n        disabled: true\n      };\n    }\n  }\n\n  return disabledDates;\n};\n\nvar renderCalendarWithSelectableDate = function renderCalendarWithSelectableDate() {\n  return React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(Calendar, {\n    current: new Date(),\n    style: styles.calendar,\n    hideExtraDays: true,\n    onDayPress: onDayPress,\n    markedDates: _defineProperty({}, selected, {\n      selected: true,\n      disableTouchEvent: true,\n      selectedColor: 'blue',\n      selectedTextColor: 'white'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('createTask', {\n        currentDate: currentDate\n      });\n    },\n    style: styles.viewTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/plus.png\"),\n    style: {\n      height: 30,\n      width: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar CalendarPage = function (_React$PureComponent) {\n  _inherits(CalendarPage, _React$PureComponent);\n\n  var _super = _createSuper(CalendarPage);\n\n  function CalendarPage() {\n    _classCallCheck(this, CalendarPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CalendarPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, renderCalendarWithSelectableDate());\n    }\n  }]);\n\n  return CalendarPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CalendarPage);\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CalendarPage.js"],"names":["React","useState","Fragment","Calendar","moment","_","selected","setSelected","onDayPress","day","dateString","getDisabledDates","startDate","endDate","daysToDisable","disabledDates","start","end","m","diff","add","includes","weekday","format","disabled","renderCalendarWithSelectableDate","Date","styles","calendar","disableTouchEvent","selectedColor","selectedTextColor","navigation","navigate","currentDate","viewTask","require","height","width","CalendarPage","PureComponent","connect","state","loading","effects","StyleSheet","create","marginBottom","text","textAlign","padding","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport { StyleSheet, View, SafeAreaView, Text, TouchableOpacity } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\nconst [selected, setSelected] = useState('');\r\nconst onDayPress = (day) => {\r\n  setSelected(day.dateString);\r\n};\r\n\r\nconst getDisabledDates = (startDate, endDate, daysToDisable) => {\r\n  const disabledDates = {};\r\n  const start = moment(startDate);\r\n  const end = moment(endDate);\r\n  for (let m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\r\n    if (_.includes(daysToDisable, m.weekday())) {\r\n      disabledDates[m.format('YYYY-MM-DD')] = { disabled: true };\r\n    }\r\n  }\r\n  return disabledDates;\r\n};\r\n\r\nconst renderCalendarWithSelectableDate = () => {\r\n  return (\r\n    <Fragment>\r\n      <Fragment></Fragment>\r\n      <Calendar\r\n        current={new Date()}\r\n        style={styles.calendar}\r\n        hideExtraDays\r\n        onDayPress={onDayPress}\r\n        markedDates={{\r\n          [selected]: {\r\n            selected: true,\r\n            disableTouchEvent: true,\r\n            selectedColor: 'blue',\r\n            selectedTextColor: 'white',\r\n          },\r\n        }}\r\n      />\r\n      <TouchableOpacity\r\n        onPress={() =>\r\n          navigation.navigate('createTask', {\r\n            // updateCurrentTask: this._updateCurrentTask,\r\n            currentDate,\r\n            // createNewCalendar: this._createNewCalendar,\r\n          })\r\n        }\r\n        style={styles.viewTask}\r\n      >\r\n        <Image\r\n          source={require('../../assets/plus.png')}\r\n          style={{\r\n            height: 30,\r\n            width: 30,\r\n          }}\r\n        />\r\n      </TouchableOpacity>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nclass CalendarPage extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <SafeAreaView showsVerticalScrollIndicator={false} >\r\n        { renderCalendarWithSelectableDate()}\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CalendarPage);\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'lightgrey',\r\n    fontSize: 16,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}