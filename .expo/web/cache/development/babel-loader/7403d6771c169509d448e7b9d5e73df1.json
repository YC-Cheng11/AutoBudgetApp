{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport dva, { connect } from 'dva';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport CalendarPage from \"./Calendar/CalendarPage\";\nimport SummaryPage from \"./Summary/SummaryPage\";\nimport AccountPage from \"./Account/AccountPage\";\nimport CreateTask from \"./Calendar/CreateTaskPage.js\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar MainPage = function (_React$PureComponent) {\n  _inherits(MainPage, _React$PureComponent);\n\n  var _super = _createSuper(MainPage);\n\n  function MainPage() {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"HomeStack\",\n    value: function HomeStack() {\n      return React.createElement(Stack.Navigator, {\n        initialRouteName: \"Calendar\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: 'orange'\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Calendar\",\n        component: CalendarPage,\n        options: {\n          title: 'Calendar'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Account\",\n        component: AccountPage,\n        options: {\n          title: 'Account'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Summary\",\n        component: SummaryPage,\n        options: {\n          title: 'Summary'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"CreateTask\",\n        component: CreateTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"AccountStack\",\n    value: function AccountStack() {\n      return React.createElement(Stack.Navigator, {\n        initialRouteName: \"Account\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: 'orange'\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Calendar\",\n        component: CalendarPage,\n        options: {\n          title: 'Calendar'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Account\",\n        component: AccountPage,\n        options: {\n          title: 'Account'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Summary\",\n        component: SummaryPage,\n        options: {\n          title: 'Summary'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"CreateTask\",\n        component: CreateTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"SummaryStack\",\n    value: function SummaryStack() {\n      return React.createElement(Stack.Navigator, {\n        initialRouteName: \"Summary\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: 'orange'\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Calendar\",\n        component: CalendarPage,\n        options: {\n          title: 'Calendar'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Account\",\n        component: AccountPage,\n        options: {\n          title: 'Account'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Summary\",\n        component: SummaryPage,\n        options: {\n          title: 'Summary'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"createTask\",\n        component: CreateTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Navigator, {\n        initialRouteName: \"Calendar\",\n        tabBarOptions: {\n          activeTintColor: 'orange'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"HomeStack\",\n        component: this.HomeStack,\n        options: {\n          tabBarLabel: 'Home',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: size,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AccountStack\",\n        component: this.AccountStack,\n        options: {\n          tabBarLabel: 'Account',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account\",\n              color: color,\n              size: size,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"SummaryStack\",\n        component: this.SummaryStack,\n        options: {\n          tabBarLabel: 'Summary',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"summary\",\n              color: color,\n              size: size,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return MainPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(MainPage);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Main.js"],"names":["React","dva","connect","NavigationContainer","createStackNavigator","createAppContainer","createBottomTabNavigator","MaterialCommunityIcons","CalendarPage","SummaryPage","AccountPage","CreateTask","Stack","Tab","MainPage","state","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","props","dispatch","effects","activeTintColor","HomeStack","tabBarLabel","tabBarIcon","color","size","AccountStack","SummaryStack","PureComponent","loading"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nimport CalendarPage from './Calendar/CalendarPage';\r\nimport SummaryPage from './Summary/SummaryPage';\r\nimport AccountPage from './Account/AccountPage';\r\nimport CreateTask from './Calendar/CreateTaskPage.js';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nclass MainPage extends React.PureComponent {\r\n  state = {\r\n\r\n  }\r\n\r\n  HomeStack() {\r\n    return (\r\n      <Stack.Navigator\r\n        initialRouteName=\"Calendar\"\r\n        screenOptions={{\r\n          headerStyle: { backgroundColor: 'orange' },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: { fontWeight: 'bold' }\r\n        }}>\r\n        <Stack.Screen\r\n          name=\"Calendar\"\r\n          component={CalendarPage}\r\n          options={{ title: 'Calendar' }} />\r\n        <Stack.Screen\r\n          name=\"Account\"\r\n          component={AccountPage}\r\n          options={{ title: 'Account' }} />\r\n        <Stack.Screen\r\n          name=\"Summary\"\r\n          component={SummaryPage}\r\n          options={{ title: 'Summary' }} />\r\n        <Stack.Screen name=\"CreateTask\" component={CreateTask} />\r\n      </Stack.Navigator>\r\n\r\n    );\r\n  }\r\n\r\n  AccountStack() {\r\n    return (\r\n      <Stack.Navigator\r\n        initialRouteName=\"Account\"\r\n        screenOptions={{\r\n          headerStyle: { backgroundColor: 'orange' },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: { fontWeight: 'bold' }\r\n        }}>\r\n        <Stack.Screen\r\n          name=\"Calendar\"\r\n          component={CalendarPage}\r\n          options={{ title: 'Calendar' }} />\r\n        <Stack.Screen\r\n          name=\"Account\"\r\n          component={AccountPage}\r\n          options={{ title: 'Account' }} />\r\n        <Stack.Screen\r\n          name=\"Summary\"\r\n          component={SummaryPage}\r\n          options={{ title: 'Summary' }} />\r\n        <Stack.Screen name=\"CreateTask\" component={CreateTask} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  SummaryStack() {\r\n    return (\r\n      <Stack.Navigator\r\n        initialRouteName=\"Summary\"\r\n        screenOptions={{\r\n          headerStyle: { backgroundColor: 'orange' },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: { fontWeight: 'bold' }\r\n        }}>\r\n        <Stack.Screen\r\n          name=\"Calendar\"\r\n          component={CalendarPage}\r\n          options={{ title: 'Calendar' }} />\r\n        <Stack.Screen\r\n          name=\"Account\"\r\n          component={AccountPage}\r\n          options={{ title: 'Account' }} />\r\n        <Stack.Screen\r\n          name=\"Summary\"\r\n          component={SummaryPage}\r\n          options={{ title: 'Summary' }} />\r\n        <Stack.Screen name=\"createTask\" component={CreateTask} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    return (\r\n      <NavigationContainer>\r\n        <Tab.Navigator\r\n          initialRouteName=\"Calendar\"\r\n          tabBarOptions={{\r\n            activeTintColor: 'orange',\r\n          }}>\r\n          <Tab.Screen\r\n            name=\"HomeStack\"\r\n            component={this.HomeStack}\r\n            options={{\r\n              tabBarLabel: 'Home',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons\r\n                  name=\"home\"\r\n                  color={color}\r\n                  size={size}\r\n                />\r\n              ),\r\n            }} />\r\n          <Tab.Screen\r\n            name=\"AccountStack\"\r\n            component={this.AccountStack}\r\n            options={{\r\n              tabBarLabel: 'Account',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons\r\n                  name=\"account\"\r\n                  color={color}\r\n                  size={size}\r\n                />\r\n              ),\r\n            }} />\r\n          <Tab.Screen\r\n            name=\"SummaryStack\"\r\n            component={this.SummaryStack}\r\n            options={{\r\n              tabBarLabel: 'Summary',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons\r\n                  name=\"summary\"\r\n                  color={color}\r\n                  size={size}\r\n                />\r\n              ),\r\n            }} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(MainPage);"]},"metadata":{},"sourceType":"module"}