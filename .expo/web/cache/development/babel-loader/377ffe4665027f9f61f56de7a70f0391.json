{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\data\\\\TodoStore.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { AsyncStorage } from '@react-native-community/async-storage';\nimport moment from 'moment';\nimport { Context } from \"../../utils/Context\";\n\nvar TodoStore = function (_Component) {\n  _inherits(TodoStore, _Component);\n\n  var _super = _createSuper(TodoStore);\n\n  function TodoStore() {\n    var _this;\n\n    _classCallCheck(this, TodoStore);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      todo: [],\n      updateTodo: function updateTodo(item) {\n        _this._updateTodo(item);\n      },\n      deleteTodo: function deleteTodo(item) {\n        _this._deleteTodo(item);\n      },\n      updateSelectedTask: function updateSelectedTask(item) {\n        _this._updateSelectedTask(item);\n      },\n      deleteSelectedTask: function deleteSelectedTask(item) {\n        _this._deleteSelectedTask(item);\n      }\n    };\n\n    _this._deleteSelectedTask = function _callee(item) {\n      var previousTodo, newTodo, checkForEmpty;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              previousTodo = _toConsumableArray(_this.state.todo);\n              newTodo = previousTodo.map(function (data) {\n                if (item.date === data.date) {\n                  var previousTodoList = _toConsumableArray(data.todoList);\n\n                  var newTodoList = previousTodoList.filter(function (list) {\n                    if (list.key === item.todo.key) {\n                      return false;\n                    }\n\n                    return true;\n                  });\n                  data.todoList = newTodoList;\n                  return data;\n                }\n\n                return data;\n              });\n              checkForEmpty = newTodo.filter(function (data) {\n                if (data.todoList.length === 0) {\n                  return false;\n                }\n\n                return true;\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(checkForEmpty)));\n\n            case 6:\n              _this.setState({\n                todo: checkForEmpty\n              });\n\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 9]], Promise);\n    };\n\n    _this._updateSelectedTask = function _callee2(item) {\n      var previousTodo, newTodo;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              previousTodo = _toConsumableArray(_this.state.todo);\n              newTodo = previousTodo.map(function (data) {\n                if (item.date === data.date) {\n                  var previousTodoList = _toConsumableArray(data.todoList);\n\n                  var newTodoList = previousTodoList.map(function (list) {\n                    if (list.key === item.todo.key) {\n                      return item.todo;\n                    }\n\n                    return list;\n                  });\n                  data.todoList = newTodoList;\n                  return data;\n                }\n\n                return data;\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(newTodo)));\n\n            case 5:\n              _this.setState({\n                todo: newTodo\n              });\n\n              _context2.next = 10;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[2, 8]], Promise);\n    };\n\n    _this._updateTodo = function _callee3(item) {\n      var datePresent, updatedTodo, newTodo;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"update todo\");\n              datePresent = _this.state.todo.find(function (data) {\n                if (data.date === item.date) {\n                  return true;\n                }\n              });\n\n              if (!datePresent) {\n                _context3.next = 14;\n                break;\n              }\n\n              updatedTodo = _this.state.todo.map(function (data) {\n                if (datePresent.date === data.date) {\n                  data.todoList = [].concat(_toConsumableArray(data.todoList), _toConsumableArray(item.todoList));\n                  return data;\n                }\n\n                return data;\n              });\n              _context3.prev = 4;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(updatedTodo)));\n\n            case 7:\n              _this.setState({\n                todo: updatedTodo\n              });\n\n              _context3.next = 12;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](4);\n\n            case 12:\n              _context3.next = 25;\n              break;\n\n            case 14:\n              newTodo = [].concat(_toConsumableArray(_this.state.todo), [item]);\n              console.log(\"newTodo\");\n              console.log(JSON.stringify(newTodo));\n              _context3.prev = 17;\n              _context3.next = 20;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(newTodo)));\n\n            case 20:\n              _this.setState({\n                todo: newTodo\n              });\n\n              _context3.next = 25;\n              break;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.t1 = _context3[\"catch\"](17);\n\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[4, 10], [17, 23]], Promise);\n    };\n\n    _this._deleteTodo = function () {};\n\n    return _this;\n  }\n\n  _createClass(TodoStore, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var todo;\n      return _regeneratorRuntime.async(function componentWillMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 3:\n              todo = _context4.sent;\n\n              if (todo !== null) {\n                this.setState({\n                  todo: JSON.parse(todo)\n                });\n              }\n\n              _context4.next = 9;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Context.Provider, {\n        value: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return TodoStore;\n}(Component);\n\nexport { TodoStore as default };","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/data/TodoStore.js"],"names":["React","Component","AsyncStorage","moment","Context","TodoStore","state","todo","updateTodo","item","_updateTodo","deleteTodo","_deleteTodo","updateSelectedTask","_updateSelectedTask","deleteSelectedTask","_deleteSelectedTask","previousTodo","newTodo","map","data","date","previousTodoList","todoList","newTodoList","filter","list","key","checkForEmpty","length","setItem","JSON","stringify","setState","console","log","datePresent","find","updatedTodo","getItem","parse","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { AsyncStorage } from '@react-native-community/async-storage';\r\nimport moment from 'moment';\r\nimport { Context } from '../../utils/Context';\r\nexport default class TodoStore extends Component {\r\n  state = {\r\n    todo: [],\r\n    updateTodo: item => {\r\n      this._updateTodo(item);\r\n    },\r\n    deleteTodo: item => {\r\n      this._deleteTodo(item);\r\n    },\r\n    updateSelectedTask: item => {\r\n      this._updateSelectedTask(item);\r\n    },\r\n    deleteSelectedTask: item => {\r\n      this._deleteSelectedTask(item);\r\n    },\r\n  };\r\n\r\n  _deleteSelectedTask = async item => {\r\n    const previousTodo = [...this.state.todo];\r\n    const newTodo = previousTodo.map(data => {\r\n      if (item.date === data.date) {\r\n        const previousTodoList = [...data.todoList];\r\n        const newTodoList = previousTodoList.filter(list => {\r\n          if (list.key === item.todo.key) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        data.todoList = newTodoList;\r\n        return data;\r\n      }\r\n      return data;\r\n    });\r\n    const checkForEmpty = newTodo.filter(data => {\r\n      if (data.todoList.length === 0) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    try {\r\n      await AsyncStorage.setItem('TODO', JSON.stringify(checkForEmpty));\r\n      this.setState({\r\n        todo: checkForEmpty,\r\n      });\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  _updateSelectedTask = async item => {\r\n    const previousTodo = [...this.state.todo];\r\n    const newTodo = previousTodo.map(data => {\r\n      if (item.date === data.date) {\r\n        const previousTodoList = [...data.todoList];\r\n        const newTodoList = previousTodoList.map(list => {\r\n          if (list.key === item.todo.key) {\r\n            return item.todo;\r\n          }\r\n          return list;\r\n        });\r\n        data.todoList = newTodoList;\r\n        return data;\r\n      }\r\n      return data;\r\n    });\r\n    try {\r\n      await AsyncStorage.setItem('TODO', JSON.stringify(newTodo));\r\n      this.setState({\r\n        todo: newTodo,\r\n      });\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  async componentWillMount() {\r\n    try {\r\n      const todo = await AsyncStorage.getItem('TODO');\r\n      if (todo !== null) {\r\n        this.setState({\r\n          todo: JSON.parse(todo),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  }\r\n\r\n  _updateTodo = async item => {\r\n    console.log(\"update todo\")\r\n    const datePresent = this.state.todo.find(data => {\r\n      if (data.date === item.date) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    if (datePresent) {\r\n      const updatedTodo = this.state.todo.map(data => {\r\n        if (datePresent.date === data.date) {\r\n          data.todoList = [...data.todoList, ...item.todoList];\r\n          return data;\r\n        }\r\n        return data;\r\n      });\r\n      try {\r\n        await AsyncStorage.setItem('TODO', JSON.stringify(updatedTodo));\r\n\r\n        this.setState({\r\n          todo: updatedTodo,\r\n        });\r\n      } catch (error) {\r\n        // Error saving data\r\n      }\r\n    } else {\r\n      const newTodo = [...this.state.todo, item];\r\n      console.log(\"newTodo\");\r\n      console.log(JSON.stringify(newTodo));\r\n      try {\r\n        await AsyncStorage.setItem('TODO', JSON.stringify(newTodo));\r\n        this.setState({\r\n          todo: newTodo,\r\n        });\r\n      } catch (error) {\r\n        // Error saving data\r\n      }\r\n    }\r\n  };\r\n\r\n  _deleteTodo = () => { };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}