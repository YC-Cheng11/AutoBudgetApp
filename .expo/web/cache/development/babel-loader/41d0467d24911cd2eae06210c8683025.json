{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\RecordList\\\\DailyExpense.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Fragment } from 'react';\nimport dva, { connect } from 'dva';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar AccountPage = function (_React$PureComponent) {\n  _inherits(AccountPage, _React$PureComponent);\n\n  var _super = _createSuper(AccountPage);\n\n  function AccountPage() {\n    var _this;\n\n    _classCallCheck(this, AccountPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this._handleDeletePreviousDayTask = function _callee2() {\n      var currentDate, value, todoList, todayDate, checkDate;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              currentDate = _this.state.currentDate;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 4:\n              value = _context2.sent;\n\n              if (!(value !== null)) {\n                _context2.next = 14;\n                break;\n              }\n\n              todoList = JSON.parse(value);\n              todayDate = moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD');\n              checkDate = moment(todayDate);\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(todoList.filter(function (item) {\n                var currDate = moment(item.date);\n                var checkedDate = checkDate.diff(currDate, 'days');\n\n                if (checkedDate > 0) {\n                  item.todoList.forEach(function _callee(listValue) {\n                    return _regeneratorRuntime.async(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.prev = 0;\n                            _context.next = 3;\n                            return _regeneratorRuntime.awrap(Calendar.deleteEventAsync(listValue.alarm.createEventAsyncRes.toString()));\n\n                          case 3:\n                            _context.next = 8;\n                            break;\n\n                          case 5:\n                            _context.prev = 5;\n                            _context.t0 = _context[\"catch\"](0);\n                            console.log(_context.t0);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, null, null, [[0, 5]], Promise);\n                  });\n                  return false;\n                }\n\n                return true;\n              }));\n\n            case 11:\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(updatedList)));\n\n            case 13:\n              _this._updateCurrentTask(currentDate);\n\n            case 14:\n              _context2.next = 18;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 16]], Promise);\n    };\n\n    _this._updateCurrentTask = function _callee3(currentDate) {\n      var value, todoList, markDot, todoLists;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 3:\n              value = _context3.sent;\n\n              if (value !== null) {\n                todoList = JSON.parse(value);\n                markDot = todoList.map(function (item) {\n                  return item.markedDot;\n                });\n                todoLists = todoList.filter(function (item) {\n                  if (currentDate === item.date) {\n                    return true;\n                  }\n\n                  return false;\n                });\n                console.log(todoList);\n\n                if (todoLists.length !== 0) {\n                  _this.setState({\n                    markedDate: markDot,\n                    todoList: todoLists[0].todoList\n                  });\n                } else {\n                  _this.setState({\n                    markedDate: markDot,\n                    todoList: []\n                  });\n                }\n              }\n\n              _context3.next = 9;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccountPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._handleDeletePreviousDayTask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      var todoList = [];\n      return React.createElement(View, {\n        style: {\n          width: '100%',\n          height: Dimensions.get('window').height - 170\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, \"Daily\", React.createElement(ScrollView, {\n        contentContainerStyle: {\n          paddingBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, todoList.map(function (item) {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              selectedTask: item,\n              isModalVisible: true\n            }, function () {});\n          },\n          key: item.key,\n          style: styles.taskListContent,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginLeft: 13\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            height: 12,\n            width: 12,\n            borderRadius: 6,\n            backgroundColor: item.color,\n            marginRight: 8\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: '#554A4C',\n            fontSize: 20\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }\n        }, item.category, \":\", item.item)), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            marginLeft: 20\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#BBBBBB',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }\n        }, item.notes)))));\n      })));\n    }\n  }]);\n\n  return AccountPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(AccountPage);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/RecordList/DailyExpense.js"],"names":["React","useState","Fragment","dva","connect","AsyncStorage","AccountPage","state","_handleDeletePreviousDayTask","currentDate","getItem","value","todoList","JSON","parse","todayDate","moment","format","checkDate","filter","item","currDate","date","checkedDate","diff","forEach","listValue","Calendar","deleteEventAsync","alarm","createEventAsyncRes","toString","console","log","setItem","stringify","updatedList","_updateCurrentTask","markDot","map","markedDot","todoLists","length","setState","markedDate","props","dispatch","effects","width","height","Dimensions","get","paddingBottom","selectedTask","isModalVisible","key","styles","taskListContent","marginLeft","flexDirection","alignItems","borderRadius","backgroundColor","color","marginRight","fontSize","category","notes","PureComponent","loading"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,KAA7B;;;;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;IACMC,W;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;UAQRC,4B,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,cAAAA,WADqB,GACL,MAAKF,KADA,CACrBE,WADqB;AAAA;AAAA;AAAA,+CAGPJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAHO;;AAAA;AAGrBC,cAAAA,KAHqB;;AAAA,oBAKvBA,KAAK,KAAK,IALa;AAAA;AAAA;AAAA;;AAMnBC,cAAAA,QANmB,GAMRC,IAAI,CAACC,KAAL,CAAWH,KAAX,CANQ;AAOnBI,cAAAA,SAPmB,GAOJC,MAAM,GAAGC,MAAT,CAAgB,MAAhB,CAPI,SAOuBD,MAAM,GAAGC,MAAT,CAC9C,IAD8C,CAPvB,SASpBD,MAAM,GAAGC,MAAT,CAAgB,IAAhB,CAToB;AAUnBC,cAAAA,SAVmB,GAUPF,MAAM,CAACD,SAAD,CAVC;AAAA;AAAA,+CAWnBH,QAAQ,CAACO,MAAT,CAAgB,UAAAC,IAAI,EAAI;AAC5B,oBAAMC,QAAQ,GAAGL,MAAM,CAACI,IAAI,CAACE,IAAN,CAAvB;AACA,oBAAMC,WAAW,GAAGL,SAAS,CAACM,IAAV,CAAeH,QAAf,EAAyB,MAAzB,CAApB;;AACA,oBAAIE,WAAW,GAAG,CAAlB,EAAqB;AACnBH,kBAAAA,IAAI,CAACR,QAAL,CAAca,OAAd,CAAsB,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAEZC,QAAQ,CAACC,gBAAT,CACJF,SAAS,CAACG,KAAV,CAAgBC,mBAAhB,CAAoCC,QAApC,EADI,CAFY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMlBC,4BAAAA,OAAO,CAACC,GAAR;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtB;AASA,yBAAO,KAAP;AACD;;AACD,uBAAO,IAAP;AACD,eAhBK,CAXmB;;AAAA;AAAA;AAAA,+CA6BnB5B,YAAY,CAAC6B,OAAb,CAAqB,MAArB,EAA6BrB,IAAI,CAACsB,SAAL,CAAeC,WAAf,CAA7B,CA7BmB;;AAAA;AA8BzB,oBAAKC,kBAAL,CAAwB5B,WAAxB;;AA9ByB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAqC/B4B,kB,GAAqB,kBAAM5B,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEGJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAFH;;AAAA;AAEXC,cAAAA,KAFW;;AAGjB,kBAAIA,KAAK,KAAK,IAAd,EAAoB;AACZC,gBAAAA,QADY,GACDC,IAAI,CAACC,KAAL,CAAWH,KAAX,CADC;AAEZ2B,gBAAAA,OAFY,GAEF1B,QAAQ,CAAC2B,GAAT,CAAa,UAAAnB,IAAI;AAAA,yBAAIA,IAAI,CAACoB,SAAT;AAAA,iBAAjB,CAFE;AAGZC,gBAAAA,SAHY,GAGA7B,QAAQ,CAACO,MAAT,CAAgB,UAAAC,IAAI,EAAI;AACxC,sBAAIX,WAAW,KAAKW,IAAI,CAACE,IAAzB,EAA+B;AAC7B,2BAAO,IAAP;AACD;;AACD,yBAAO,KAAP;AACD,iBALiB,CAHA;AASlBU,gBAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;;AACA,oBAAI6B,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,wBAAKC,QAAL,CAAc;AACZC,oBAAAA,UAAU,EAAEN,OADA;AAEZ1B,oBAAAA,QAAQ,EAAE6B,SAAS,CAAC,CAAD,CAAT,CAAa7B;AAFX,mBAAd;AAID,iBALD,MAKO;AACL,wBAAK+B,QAAL,CAAc;AACZC,oBAAAA,UAAU,EAAEN,OADA;AAEZ1B,oBAAAA,QAAQ,EAAE;AAFE,mBAAd;AAID;AACF;;AAxBgB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;yCAzCA;AACnB,WAAKJ,4BAAL;AACD;;;6BAqEQ;AAAA;;AAAA,wBACuB,KAAKqC,KAD5B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,OADX,eACWA,OADX;AAEP,UAAInC,QAAQ,GAAG,EAAf;AACA,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLoC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAAzB,GAAkC;AAFrC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,UAAD;AACE,QAAA,qBAAqB,EAAE;AACrBG,UAAAA,aAAa,EAAE;AADM,SADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGxC,QAAQ,CAAC2B,GAAT,CAAa,UAAAnB,IAAI;AAAA,eAChB,oBAAC,gBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACuB,QAAL,CACE;AACEU,cAAAA,YAAY,EAAEjC,IADhB;AAEEkC,cAAAA,cAAc,EAAE;AAFlB,aADF,EAKE,YAAM,CAEL,CAPH;AASD,WAXH;AAYE,UAAA,GAAG,EAAElC,IAAI,CAACmC,GAZZ;AAaE,UAAA,KAAK,EAAEC,MAAM,CAACC,eAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAeE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAE;AADP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,aAAa,EAAE,KADV;AAELC,YAAAA,UAAU,EAAE;AAFP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLX,YAAAA,MAAM,EAAE,EADH;AAELD,YAAAA,KAAK,EAAE,EAFF;AAGLa,YAAAA,YAAY,EAAE,CAHT;AAILC,YAAAA,eAAe,EAAE1C,IAAI,CAAC2C,KAJjB;AAKLC,YAAAA,WAAW,EAAE;AALR,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAeE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLD,YAAAA,KAAK,EAAE,SADF;AAELE,YAAAA,QAAQ,EAAE;AAFL,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOG7C,IAAI,CAAC8C,QAPR,OAOmB9C,IAAI,CAACA,IAPxB,CAfF,CALF,EA8BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLuC,YAAAA,aAAa,EAAE,KADV;AAELD,YAAAA,UAAU,EAAE;AAFP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLK,YAAAA,KAAK,EAAE,SADF;AAELE,YAAAA,QAAQ,EAAE;AAFL,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG7C,IAAI,CAAC+C,KANR,CANF,CADF,CA9BF,CAfF,CADgB;AAAA,OAAjB,CALH,CAPF,CADF;AA0FD;;;;EAzKuBnE,KAAK,CAACoE,a;;AA2KhC,eAAehE,OAAO,CAAC,UAAAG,KAAK;AAAA,SAAK;AAC/B8D,IAAAA,OAAO,EAAE9D,KAAK,CAAC8D,OADgB;AAE/BtB,IAAAA,OAAO,EAAExC,KAAK,CAAC8D,OAAN,CAActB;AAFQ,GAAL;AAAA,CAAN,CAAP,CAGXzC,WAHW,CAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { StyleSheet, View, Image, SafeAreaView, Text, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nclass AccountPage extends React.PureComponent {\r\n  state = {\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    this._handleDeletePreviousDayTask();\r\n  }\r\n\r\n  _handleDeletePreviousDayTask = async () => {\r\n    const { currentDate } = this.state;\r\n    try {\r\n      const value = await AsyncStorage.getItem('TODO');\r\n\r\n      if (value !== null) {\r\n        const todoList = JSON.parse(value);\r\n        const todayDate = `${moment().format('YYYY')}-${moment().format(\r\n          'MM'\r\n        )}-${moment().format('DD')}`;\r\n        const checkDate = moment(todayDate);\r\n        await todoList.filter(item => {\r\n          const currDate = moment(item.date);\r\n          const checkedDate = checkDate.diff(currDate, 'days');\r\n          if (checkedDate > 0) {\r\n            item.todoList.forEach(async listValue => {\r\n              try {\r\n                await Calendar.deleteEventAsync(\r\n                  listValue.alarm.createEventAsyncRes.toString()\r\n                );\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n            });\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        await AsyncStorage.setItem('TODO', JSON.stringify(updatedList));\r\n        this._updateCurrentTask(currentDate);\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n\r\n  _updateCurrentTask = async currentDate => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('TODO');\r\n      if (value !== null) {\r\n        const todoList = JSON.parse(value);\r\n        const markDot = todoList.map(item => item.markedDot);\r\n        const todoLists = todoList.filter(item => {\r\n          if (currentDate === item.date) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        console.log(todoList);\r\n        if (todoLists.length !== 0) {\r\n          this.setState({\r\n            markedDate: markDot,\r\n            todoList: todoLists[0].todoList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            markedDate: markDot,\r\n            todoList: [],\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    var todoList = [];\r\n    return (\r\n      <View\r\n        style={{\r\n          width: '100%',\r\n          height: Dimensions.get('window').height - 170,\r\n        }}\r\n      >\r\n        Daily\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            paddingBottom: 20,\r\n          }}\r\n        >\r\n          {todoList.map(item => (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.setState(\r\n                  {\r\n                    selectedTask: item,\r\n                    isModalVisible: true,\r\n                  },\r\n                  () => {\r\n                    // this._getEvent();\r\n                  }\r\n                );\r\n              }}\r\n              key={item.key}\r\n              style={styles.taskListContent}\r\n            >\r\n              <View\r\n                style={{\r\n                  marginLeft: 13,\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      height: 12,\r\n                      width: 12,\r\n                      borderRadius: 6,\r\n                      backgroundColor: item.color,\r\n                      marginRight: 8,\r\n                    }}\r\n                  />\r\n                  <Text\r\n                    style={{\r\n                      color: '#554A4C',\r\n                      fontSize: 20,\r\n                      // fontWeight: '700',\r\n                    }}\r\n                  >\r\n                    {item.category}:{item.item}\r\n                  </Text>\r\n                </View>\r\n                <View>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: 'row',\r\n                      marginLeft: 20,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: '#BBBBBB',\r\n                        fontSize: 14,\r\n                      }}\r\n                    >\r\n                      {item.notes}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              {/* <View\r\n              style={{\r\n                height: 80,\r\n                width: 5,\r\n                backgroundColor: item.color,\r\n                borderRadius: 5,\r\n              }}\r\n            /> */}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(AccountPage);"]},"metadata":{},"sourceType":"module"}