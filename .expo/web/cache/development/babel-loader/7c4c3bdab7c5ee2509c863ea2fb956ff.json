{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CreateTaskPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'dva';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport moment from 'moment';\nimport uuid from 'uuid';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport ExpensePage from \"./ExpensePage\";\nimport IncomePage from \"./IncomePage\";\nimport { getDataFromStorage } from \"../data/DataUtils\";\nvar currentDate = getDataFromStorage(\"currentDate\").then(function (value) {\n  return value;\n});\nvar Tab = createMaterialTopTabNavigator();\n\nvar CreateTask = function (_React$PureComponent) {\n  _inherits(CreateTask, _React$PureComponent);\n\n  var _super = _createSuper(CreateTask);\n\n  function CreateTask() {\n    var _this;\n\n    _classCallCheck(this, CreateTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CreateTask, [{\n    key: \"render\",\n    value: function render() {\n      var route = this.props.route;\n      var initialParams = {\n        currentDate: currentDate\n      };\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Expense\",\n        component: ExpensePage,\n        initialParams: route.params.params,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Income\",\n        component: IncomePage,\n        initialParams: route.params.params,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CreateTask;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CreateTask);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CreateTaskPage.js"],"names":["React","connect","moment","uuid","createMaterialTopTabNavigator","ExpensePage","IncomePage","getDataFromStorage","currentDate","then","value","Tab","CreateTask","state","route","props","initialParams","params","PureComponent","loading","effects"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,KAAxB;;;;AAMA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,SAASC,kBAAT;AACA,IAAMC,WAAW,GAAGD,kBAAkB,CAAC,aAAD,CAAlB,CAAkCE,IAAlC,CAAuC,UAAAC,KAAK,EAAI;AAClE,SAAOA,KAAP;AACD,CAFmB,CAApB;AAIA,IAAMC,GAAG,GAAGP,6BAA6B,EAAzC;;IACMQ,U;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;;;;;6BAEC;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,UAAME,aAAa,GAAG;AACpBR,QAAAA,WAAW,EAAEA;AADO,OAAtB;AAGA,aACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAEH,WAAtC;AAAmD,QAAA,aAAa,EAAES,KAAK,CAACG,MAAN,CAAaA,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,QAAjB;AAA0B,QAAA,SAAS,EAAEX,UAArC;AAAiD,QAAA,aAAa,EAAEQ,KAAK,CAACG,MAAN,CAAaA,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAdsBjB,KAAK,CAACkB,a;;AAgB/B,eAAejB,OAAO,CAAC,UAAAY,KAAK;AAAA,SAAK;AAC/BM,IAAAA,OAAO,EAAEN,KAAK,CAACM,OADgB;AAE/BC,IAAAA,OAAO,EAAEP,KAAK,CAACM,OAAN,CAAcC;AAFQ,GAAL;AAAA,CAAN,CAAP,CAGXR,UAHW,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'dva';\r\nimport {\r\n  Dimensions,\r\n  Keyboard,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport moment from 'moment';\r\nimport uuid from 'uuid';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ExpensePage from './ExpensePage';\r\nimport IncomePage from './IncomePage';\r\nimport { getDataFromStorage } from '../data/DataUtils';\r\nconst currentDate = getDataFromStorage(\"currentDate\").then(value => {\r\n  return value;\r\n});\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\nclass CreateTask extends React.PureComponent {\r\n  state = {}\r\n  // Local path to file on the device\r\n  render() {\r\n    const { route } = this.props;\r\n    const initialParams = {\r\n      currentDate: currentDate\r\n    }\r\n    return (\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Expense\" component={ExpensePage} initialParams={route.params.params} />\r\n        <Tab.Screen name=\"Income\" component={IncomePage} initialParams={route.params.params} />\r\n      </Tab.Navigator>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CreateTask);"]},"metadata":{},"sourceType":"module"}