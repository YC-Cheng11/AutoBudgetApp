{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\RecordList\\\\MonthlyExpense.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Fragment } from 'react';\nimport dva, { connect } from 'dva';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar MonthlyExpense = function (_React$PureComponent) {\n  _inherits(MonthlyExpense, _React$PureComponent);\n\n  var _super = _createSuper(MonthlyExpense);\n\n  function MonthlyExpense() {\n    var _this;\n\n    _classCallCheck(this, MonthlyExpense);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MonthlyExpense, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          monthlyList = _this$props.monthlyList,\n          currentDate = _this$props.currentDate;\n      return React.createElement(View, {\n        style: {\n          width: '100%',\n          height: Dimensions.get('window').height - 170\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: {\n          paddingBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, monthlyList.map(function (todoList) {\n        return todoList ? todoList.map(function (item) {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this2.setState({\n                selectedTask: item,\n                isModalVisible: true\n              }, function () {});\n            },\n            key: item.key,\n            style: styles.taskListContent,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }\n          }, React.createElement(View, {\n            style: {\n              marginLeft: 13\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }\n          }, React.createElement(View, {\n            style: {\n              height: 12,\n              width: 12,\n              borderRadius: 6,\n              backgroundColor: item.color,\n              marginRight: 8\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }\n          }), React.createElement(Text, {\n            style: {\n              color: '#554A4C',\n              fontSize: 20\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }\n          }, item.category, \":\", item.item)), React.createElement(View, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              marginLeft: 20\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: {\n              color: '#BBBBBB',\n              fontSize: 14\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }\n          }, item.notes)))));\n        }) : React.createElement(React.Fragment, null);\n      })));\n    }\n  }]);\n\n  return MonthlyExpense;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(MonthlyExpense);\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  },\n  viewTask: {\n    position: 'absolute',\n    top: 0,\n    right: 17,\n    height: 50,\n    width: 50,\n    backgroundColor: 'orange',\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#2E66E7',\n    shadowOpacity: 0.5,\n    elevation: 5,\n    zIndex: 999\n  }\n});","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/RecordList/MonthlyExpense.js"],"names":["React","useState","Fragment","dva","connect","MonthlyExpense","state","props","monthlyList","currentDate","width","height","Dimensions","get","paddingBottom","map","todoList","item","setState","selectedTask","isModalVisible","key","styles","taskListContent","marginLeft","flexDirection","alignItems","borderRadius","backgroundColor","color","marginRight","fontSize","category","notes","PureComponent","loading","effects","StyleSheet","create","calendar","marginBottom","text","textAlign","padding","viewTask","position","top","right","justifyContent","shadowColor","shadowOpacity","elevation","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { StyleSheet, View, Image, SafeAreaView, Text, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\r\nclass MonthlyExpense extends React.PureComponent {\r\n  state = {\r\n\r\n  }\r\n  // Local path to file on the device\r\n  render() {\r\n    const { monthlyList, currentDate } = this.props;\r\n\r\n    return (\r\n      <View\r\n        style={{\r\n          width: '100%',\r\n          height: Dimensions.get('window').height - 170,\r\n        }}\r\n      >\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            paddingBottom: 20,\r\n          }}\r\n        >\r\n          {monthlyList.map(todoList => (\r\n            todoList ? \r\n            todoList.map(item => (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  this.setState(\r\n                    {\r\n                      selectedTask: item,\r\n                      isModalVisible: true,\r\n                    },\r\n                    () => {\r\n                      // this._getEvent();\r\n                    }\r\n                  );\r\n                }}\r\n                key={item.key}\r\n                style={styles.taskListContent}\r\n              >\r\n                <View\r\n                  style={{\r\n                    marginLeft: 13,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        height: 12,\r\n                        width: 12,\r\n                        borderRadius: 6,\r\n                        backgroundColor: item.color,\r\n                        marginRight: 8,\r\n                      }}\r\n                    />\r\n                    <Text\r\n                      style={{\r\n                        color: '#554A4C',\r\n                        fontSize: 20,\r\n                        // fontWeight: '700',\r\n                      }}\r\n                    >\r\n                      {item.category}:{item.item}\r\n                    </Text>\r\n                  </View>\r\n                  <View>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: 'row',\r\n                        marginLeft: 20,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: '#BBBBBB',\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        {item.notes}\r\n                      </Text>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                {/* <View\r\n              style={{\r\n                height: 80,\r\n                width: 5,\r\n                backgroundColor: item.color,\r\n                borderRadius: 5,\r\n              }}\r\n            /> */}\r\n              </TouchableOpacity>\r\n            )):<></>))}\r\n        </ScrollView>\r\n      </View>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(MonthlyExpense);\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'lightgrey',\r\n    fontSize: 16,\r\n  },\r\n  viewTask: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 17,\r\n    height: 50,\r\n    width: 50,\r\n    backgroundColor: 'orange',\r\n    borderRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    shadowColor: '#2E66E7',\r\n    // shadowOffset: {\r\n    //   width: 0,\r\n    //   height: 5,\r\n    // },\r\n    // shadowRadius: 30,\r\n    shadowOpacity: 0.5,\r\n    elevation: 5,\r\n    zIndex: 999,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}