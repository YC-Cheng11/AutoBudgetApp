{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CalendarPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Fragment } from 'react';\nimport dva, { connect } from 'dva';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { AsyncStorage } from '@react-native-community/async-storage';\n\nvar CalendarPage = function (_React$PureComponent) {\n  _inherits(CalendarPage, _React$PureComponent);\n\n  var _super = _createSuper(CalendarPage);\n\n  function CalendarPage() {\n    var _this;\n\n    _classCallCheck(this, CalendarPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selected: '',\n      datesWhitelist: [{\n        start: moment(),\n        end: moment().add(365, 'days')\n      }],\n      todoList: [],\n      markedDate: [],\n      currentDate: moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD'),\n      isModalVisible: false,\n      selectedTask: null,\n      isDateTimePickerVisible: false\n    };\n\n    _this._handleDeletePreviousDayTask = function _callee2() {\n      var currentDate, value, todoList, todayDate, checkDate;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              currentDate = _this.state.currentDate;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 4:\n              value = _context2.sent;\n\n              if (!(value !== null)) {\n                _context2.next = 14;\n                break;\n              }\n\n              todoList = JSON.parse(value);\n              todayDate = moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD');\n              checkDate = moment(todayDate);\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(todoList.filter(function (item) {\n                var currDate = moment(item.date);\n                var checkedDate = checkDate.diff(currDate, 'days');\n\n                if (checkedDate > 0) {\n                  item.todoList.forEach(function _callee(listValue) {\n                    return _regeneratorRuntime.async(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.prev = 0;\n                            _context.next = 3;\n                            return _regeneratorRuntime.awrap(Calendar.deleteEventAsync(listValue.alarm.createEventAsyncRes.toString()));\n\n                          case 3:\n                            _context.next = 8;\n                            break;\n\n                          case 5:\n                            _context.prev = 5;\n                            _context.t0 = _context[\"catch\"](0);\n                            console.log(_context.t0);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, null, null, [[0, 5]], Promise);\n                  });\n                  return false;\n                }\n\n                return true;\n              }));\n\n            case 11:\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(updatedList)));\n\n            case 13:\n              _this._updateCurrentTask(currentDate);\n\n            case 14:\n              _context2.next = 18;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 16]], Promise);\n    };\n\n    _this.onDayPress = function (day) {\n      _this.setState({\n        selected: day.dateString\n      });\n    };\n\n    _this.getDisabledDates = function (startDate, endDate, daysToDisable) {\n      var disabledDates = {};\n      var start = moment(startDate);\n      var end = moment(endDate);\n\n      for (var m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\n        if (_.includes(daysToDisable, m.weekday())) {\n          disabledDates[m.format('YYYY-MM-DD')] = {\n            disabled: true\n          };\n        }\n      }\n\n      return disabledDates;\n    };\n\n    _this._updateCurrentTask = function _callee3(currentDate) {\n      var value, todoList, markDot, todoLists;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              console.log(\"_updateCurrentTask\");\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 4:\n              value = _context3.sent;\n              console.log(\"value\", value);\n\n              if (value !== null) {\n                todoList = JSON.parse(value);\n                markDot = todoList.map(function (item) {\n                  return item.markedDot;\n                });\n                todoLists = todoList.filter(function (item) {\n                  if (currentDate === item.date) {\n                    return true;\n                  }\n\n                  return false;\n                });\n                console.log(todoList);\n\n                if (todoLists.length !== 0) {\n                  _this.setState({\n                    markedDate: markDot,\n                    todoList: todoLists[0].todoList\n                  });\n                } else {\n                  _this.setState({\n                    markedDate: markDot,\n                    todoList: []\n                  });\n                }\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    _this.renderCalendarWithSelectableDate = function () {\n      var _this$state = _this.state,\n          selected = _this$state.selected,\n          currentDate = _this$state.currentDate,\n          todoList = _this$state.todoList;\n      var navigation = _this.props.navigation;\n      return React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, React.createElement(Calendar, {\n        current: new Date(),\n        hideExtraDays: true,\n        onDayPress: _this.onDayPress,\n        markedDates: _defineProperty({}, selected, {\n          selected: true,\n          disableTouchEvent: true,\n          selectedColor: 'orange',\n          selectedTextColor: 'white'\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('createTask', {\n            currentDate: currentDate,\n            updateCurrentTask: _this._updateCurrentTask\n          });\n        },\n        style: styles.viewTask,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/plus.png\"),\n        style: {\n          height: 30,\n          width: 30\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: {\n          width: '100%',\n          height: Dimensions.get('window').height - 170\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: {\n          paddingBottom: 20\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, todoList.map(function (item) {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this.setState({\n              selectedTask: item,\n              isModalVisible: true\n            }, function () {\n              _this._getEvent();\n            });\n          },\n          key: item.key,\n          style: styles.taskListContent,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            marginLeft: 13\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: {\n            height: 12,\n            width: 12,\n            borderRadius: 6,\n            backgroundColor: item.color,\n            marginRight: 8\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: '#554A4C',\n            fontSize: 20,\n            fontWeight: '700'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }\n        }, item.title)), React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            marginLeft: 20\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#BBBBBB',\n            fontSize: 14,\n            marginRight: 5\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 23\n          }\n        }, moment(item.alarm.time).format('YYYY') + \"/\" + moment(item.alarm.time).format('MM') + \"/\" + moment(item.alarm.time).format('DD')), React.createElement(Text, {\n          style: {\n            color: '#BBBBBB',\n            fontSize: 14\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 23\n          }\n        }, item.notes)))), React.createElement(View, {\n          style: {\n            height: 80,\n            width: 5,\n            backgroundColor: item.color,\n            borderRadius: 5\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }\n        }));\n      }))));\n    };\n\n    return _this;\n  }\n\n  _createClass(CalendarPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"here\");\n\n      this._handleDeletePreviousDayTask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }\n      }, this.renderCalendarWithSelectableDate());\n    }\n  }]);\n\n  return CalendarPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CalendarPage);\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  },\n  viewTask: {\n    position: 'absolute',\n    top: 400,\n    right: 17,\n    height: 50,\n    width: 50,\n    backgroundColor: 'orange',\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#2E66E7',\n    shadowOpacity: 0.5,\n    elevation: 5,\n    zIndex: 999\n  }\n});","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CalendarPage.js"],"names":["React","useState","Fragment","dva","connect","Calendar","moment","_","AsyncStorage","CalendarPage","state","selected","datesWhitelist","start","end","add","todoList","markedDate","currentDate","format","isModalVisible","selectedTask","isDateTimePickerVisible","_handleDeletePreviousDayTask","getItem","value","JSON","parse","todayDate","checkDate","filter","item","currDate","date","checkedDate","diff","forEach","listValue","deleteEventAsync","alarm","createEventAsyncRes","toString","console","log","setItem","stringify","updatedList","_updateCurrentTask","onDayPress","day","setState","dateString","getDisabledDates","startDate","endDate","daysToDisable","disabledDates","m","includes","weekday","disabled","markDot","map","markedDot","todoLists","length","renderCalendarWithSelectableDate","navigation","props","Date","disableTouchEvent","selectedColor","selectedTextColor","navigate","updateCurrentTask","styles","viewTask","require","height","width","Dimensions","get","paddingBottom","_getEvent","key","taskListContent","marginLeft","flexDirection","alignItems","borderRadius","backgroundColor","color","marginRight","fontSize","fontWeight","title","time","notes","PureComponent","loading","effects","StyleSheet","create","calendar","marginBottom","text","textAlign","padding","position","top","right","justifyContent","shadowColor","shadowOpacity","elevation","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport { StyleSheet, View, Image, SafeAreaView, Text, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { AsyncStorage } from '@react-native-community/async-storage';\r\n\r\n\r\n\r\nclass CalendarPage extends React.PureComponent {\r\n  state = {\r\n    selected: '',\r\n    datesWhitelist: [\r\n      {\r\n        start: moment(),\r\n        end: moment().add(365, 'days'), // total 4 days enabled\r\n      },\r\n    ],\r\n    todoList: [],\r\n    markedDate: [],\r\n    currentDate: `${moment().format('YYYY')}-${moment().format(\r\n      'MM'\r\n    )}-${moment().format('DD')}`,\r\n    isModalVisible: false,\r\n    selectedTask: null,\r\n    isDateTimePickerVisible: false,\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"here\");\r\n    this._handleDeletePreviousDayTask();\r\n  }\r\n\r\n  // componentDidUpdate(prevProps) {\r\n  //   // if (prevProps.route.params?.currentDate !== this.props.route.params?.currentDate) {\r\n  //   if (this.props.route.params?.currentDate) {\r\n  //     const result = this.props.route.params?.currentDate;\r\n  //     this._updateCurrentTask(result);\r\n  //   }\r\n  // }\r\n\r\n\r\n  _handleDeletePreviousDayTask = async () => {\r\n    const { currentDate } = this.state;\r\n    try {\r\n      const value = await AsyncStorage.getItem('TODO');\r\n\r\n      if (value !== null) {\r\n        const todoList = JSON.parse(value);\r\n        const todayDate = `${moment().format('YYYY')}-${moment().format(\r\n          'MM'\r\n        )}-${moment().format('DD')}`;\r\n        const checkDate = moment(todayDate);\r\n        await todoList.filter(item => {\r\n          const currDate = moment(item.date);\r\n          const checkedDate = checkDate.diff(currDate, 'days');\r\n          if (checkedDate > 0) {\r\n            item.todoList.forEach(async listValue => {\r\n              try {\r\n                await Calendar.deleteEventAsync(\r\n                  listValue.alarm.createEventAsyncRes.toString()\r\n                );\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n            });\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        await AsyncStorage.setItem('TODO', JSON.stringify(updatedList));\r\n        this._updateCurrentTask(currentDate);\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n\r\n  onDayPress = (day) => {\r\n    this.setState({\r\n      selected: day.dateString\r\n    })\r\n  };\r\n\r\n  getDisabledDates = (startDate, endDate, daysToDisable) => {\r\n    const disabledDates = {};\r\n    const start = moment(startDate);\r\n    const end = moment(endDate);\r\n    for (let m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\r\n      if (_.includes(daysToDisable, m.weekday())) {\r\n        disabledDates[m.format('YYYY-MM-DD')] = { disabled: true };\r\n      }\r\n    }\r\n    return disabledDates;\r\n  };\r\n\r\n\r\n  _updateCurrentTask = async currentDate => {\r\n    try {\r\n      console.log(\"_updateCurrentTask\");\r\n      const value = await AsyncStorage.getItem('TODO');\r\n      console.log(\"value\", value);\r\n      if (value !== null) {\r\n        const todoList = JSON.parse(value);\r\n        const markDot = todoList.map(item => item.markedDot);\r\n        const todoLists = todoList.filter(item => {\r\n          if (currentDate === item.date) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        console.log(todoList);\r\n        if (todoLists.length !== 0) {\r\n          this.setState({\r\n            markedDate: markDot,\r\n            todoList: todoLists[0].todoList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            markedDate: markDot,\r\n            todoList: [],\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  };\r\n  renderCalendarWithSelectableDate = () => {\r\n    const { selected, currentDate, todoList } = this.state;\r\n    const { navigation } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Fragment>\r\n          <Calendar\r\n            current={new Date()}\r\n            // style={styles.calendar}\r\n            hideExtraDays\r\n            onDayPress={this.onDayPress}\r\n            markedDates={{\r\n              [selected]: {\r\n                selected: true,\r\n                disableTouchEvent: true,\r\n                selectedColor: 'orange',\r\n                selectedTextColor: 'white',\r\n              },\r\n            }}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate('createTask', {\r\n                currentDate,\r\n                updateCurrentTask: this._updateCurrentTask\r\n              })\r\n            }\r\n            style={styles.viewTask}\r\n          >\r\n            <Image\r\n              source={require('../../assets/plus.png')}\r\n              style={{\r\n                height: 30,\r\n                width: 30,\r\n              }}\r\n            />\r\n          </TouchableOpacity></Fragment>\r\n        <View\r\n          style={{\r\n            width: '100%',\r\n            height: Dimensions.get('window').height - 170,\r\n          }}\r\n        >\r\n          <ScrollView\r\n            contentContainerStyle={{\r\n              paddingBottom: 20,\r\n            }}\r\n          >\r\n            {todoList.map(item => (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  this.setState(\r\n                    {\r\n                      selectedTask: item,\r\n                      isModalVisible: true,\r\n                    },\r\n                    () => {\r\n                      this._getEvent();\r\n                    }\r\n                  );\r\n                }}\r\n                key={item.key}\r\n                style={styles.taskListContent}\r\n              >\r\n                <View\r\n                  style={{\r\n                    marginLeft: 13,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        height: 12,\r\n                        width: 12,\r\n                        borderRadius: 6,\r\n                        backgroundColor: item.color,\r\n                        marginRight: 8,\r\n                      }}\r\n                    />\r\n                    <Text\r\n                      style={{\r\n                        color: '#554A4C',\r\n                        fontSize: 20,\r\n                        fontWeight: '700',\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Text>\r\n                  </View>\r\n                  <View>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: 'row',\r\n                        marginLeft: 20,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: '#BBBBBB',\r\n                          fontSize: 14,\r\n                          marginRight: 5,\r\n                        }}\r\n                      >{`${moment(item.alarm.time).format(\r\n                        'YYYY'\r\n                      )}/${moment(item.alarm.time).format('MM')}/${moment(\r\n                        item.alarm.time\r\n                      ).format('DD')}`}</Text>\r\n                      <Text\r\n                        style={{\r\n                          color: '#BBBBBB',\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        {item.notes}\r\n                      </Text>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    height: 80,\r\n                    width: 5,\r\n                    backgroundColor: item.color,\r\n                    borderRadius: 5,\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            ))}\r\n          </ScrollView>\r\n        </View>\r\n      </Fragment>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <SafeAreaView showsVerticalScrollIndicator={false} >\r\n        { this.renderCalendarWithSelectableDate()}\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CalendarPage);\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'lightgrey',\r\n    fontSize: 16,\r\n  },\r\n  viewTask: {\r\n    position: 'absolute',\r\n    top: 400,\r\n    right: 17,\r\n    height: 50,\r\n    width: 50,\r\n    backgroundColor: 'orange',\r\n    borderRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    shadowColor: '#2E66E7',\r\n    // shadowOffset: {\r\n    //   width: 0,\r\n    //   height: 5,\r\n    // },\r\n    // shadowRadius: 30,\r\n    shadowOpacity: 0.5,\r\n    elevation: 5,\r\n    zIndex: 999,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}