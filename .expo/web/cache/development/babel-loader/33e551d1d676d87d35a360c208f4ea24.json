{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CreateTaskPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dva, { connect } from 'dva';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { CalendarList } from 'react-native-calendars';\nimport moment from 'moment';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport uuid from 'uuid';\nimport { Context } from \"../../utils/Context\";\n\nvar CreateTask = function (_React$PureComponent) {\n  _inherits(CreateTask, _React$PureComponent);\n\n  var _super = _createSuper(CreateTask);\n\n  function CreateTask() {\n    var _this;\n\n    _classCallCheck(this, CreateTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isDateTimePickerVisible: false,\n      visibleHeight: Dimensions.get('window').height\n    };\n\n    _this._keyboardDidShow = function (e) {\n      _this.setState({\n        keyboardHeight: e.endCoordinates.height,\n        visibleHeight: Dimensions.get('window').height - e.endCoordinates.height - 30\n      });\n    };\n\n    _this._keyboardDidHide = function () {\n      _this.setState({\n        visibleHeight: Dimensions.get('window').height\n      });\n    };\n\n    _this._showDateTimePicker = function () {\n      return _this.setState({\n        isDateTimePickerVisible: true\n      });\n    };\n\n    _this._hideDateTimePicker = function () {\n      return _this.setState({\n        isDateTimePickerVisible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateTask, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Keyboard.removeListener('keyboardDidShow', this._keyboardDidShow);\n      Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      var _this$state = this.state,\n          isDateTimePickerVisible = _this$state.isDateTimePickerVisible,\n          visibleHeight = _this$state.visibleHeight;\n      console.log(this.props);\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(Context.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, function (value) {\n        return React.createElement(React.Fragment, null, React.createElement(DateTimePicker, {\n          isVisible: isDateTimePickerVisible,\n          onConfirm: _this2._handleDatePicked,\n          onCancel: _this2._hideDateTimePicker,\n          mode: \"time\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            height: visibleHeight\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, React.createElement(ScrollView, {\n          contentContainerStyle: {\n            paddingBottom: 100\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: styles.calenderContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, React.createElement(CalendarList, {\n          style: {\n            width: 350,\n            height: 350\n          },\n          current: currentDay,\n          minDate: moment().format(),\n          horizontal: true,\n          pastScrollRange: 0,\n          pagingEnabled: true,\n          calendarWidth: 350,\n          onDayPress: function onDayPress(day) {\n            _this2.setState({\n              selectedDay: _defineProperty({}, day.dateString, {\n                selected: true,\n                selectedColor: '#2E66E7'\n              }),\n              currentDay: day.dateString,\n              alarmTime: day.dateString\n            });\n          },\n          monthFormat: \"yyyy MMMM\",\n          hideArrows: true,\n          markingType: \"simple\",\n          theme: {\n            selectedDayBackgroundColor: '#2E66E7',\n            selectedDayTextColor: '#ffffff',\n            todayTextColor: '#2E66E7',\n            backgroundColor: '#eaeef7',\n            calendarBackground: '#eaeef7',\n            textDisabledColor: '#d9dbe0'\n          },\n          markedDates: selectedDay,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }\n        })), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: styles.title,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              taskText: text\n            });\n          },\n          value: taskText,\n          placeholder: \"What do you need to do?\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 23\n          }\n        }), React.createElement(Text, {\n          style: {\n            fontSize: 14,\n            color: '#BDC6D8',\n            marginVertical: 10\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }\n        }, \"Suggestion\"), React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: styles.readBook,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 27\n          }\n        }, \"Read book\")), React.createElement(View, {\n          style: styles.design,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 27\n          }\n        }, \"Design\")), React.createElement(View, {\n          style: styles.learn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 14\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 27\n          }\n        }, \"Learn\"))), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 23\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.notes,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        }, \"Notes\"), React.createElement(TextInput, {\n          style: {\n            height: 25,\n            fontSize: 19,\n            marginTop: 3\n          },\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              notesText: text\n            });\n          },\n          value: notesText,\n          placeholder: \"Enter notes about the task.\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          style: styles.seperator,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 23\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#9CAAC4',\n            fontSize: 16,\n            fontWeight: '600'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }, \"Times\"), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2._showDateTimePicker();\n          },\n          style: {\n            height: 25,\n            marginTop: 3\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 19\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 27\n          }\n        }, moment(alarmTime).format('h:mm A')))), React.createElement(View, {\n          style: styles.seperator,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 23\n          }\n        }), React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#9CAAC4',\n            fontSize: 16,\n            fontWeight: '600'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 27\n          }\n        }, \"Alarm\"), React.createElement(View, {\n          style: {\n            height: 25,\n            marginTop: 3\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 19\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }\n        }, moment(alarmTime).format('h:mm A')))), React.createElement(Switch, {\n          value: isAlarmSet,\n          onValueChange: _this2.handleAlarmSet,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }))), React.createElement(TouchableOpacity, {\n          disabled: taskText === '',\n          style: [styles.createTaskButton, {\n            backgroundColor: taskText === '' ? 'rgba(46, 102, 231,0.5)' : '#2E66E7'\n          }],\n          onPress: function _callee() {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!isAlarmSet) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(_this2.synchronizeCalendar(value));\n\n                  case 3:\n                    if (!isAlarmSet) {\n                      _this2._handleCreateEventData(value);\n                    }\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            textAlign: 'center',\n            color: '#fff'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 23\n          }\n        }, \"ADD YOUR TASK\"))))));\n      }));\n    }\n  }]);\n\n  return CreateTask;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CreateTask);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CreateTaskPage.js"],"names":["React","Component","dva","connect","CalendarList","moment","DateTimePicker","uuid","Context","CreateTask","state","isDateTimePickerVisible","visibleHeight","Dimensions","get","height","_keyboardDidShow","e","setState","keyboardHeight","endCoordinates","_keyboardDidHide","_showDateTimePicker","_hideDateTimePicker","Keyboard","removeListener","props","dispatch","effects","console","log","flex","flexDirection","alignItems","justifyContent","value","_handleDatePicked","paddingBottom","styles","calenderContainer","width","currentDay","format","day","selectedDay","dateString","selected","selectedColor","alarmTime","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","backgroundColor","calendarBackground","textDisabledColor","title","text","taskText","fontSize","color","marginVertical","readBook","textAlign","design","learn","notes","marginTop","notesText","seperator","fontWeight","isAlarmSet","handleAlarmSet","createTaskButton","synchronizeCalendar","_handleCreateEventData","PureComponent","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport {\r\n  Text,\r\n  Image,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  ScrollView,\r\n  TextInput,\r\n  Keyboard,\r\n  Switch,\r\n  StyleSheet,\r\n  Alert,\r\n} from 'react-native';\r\nimport { CalendarList } from 'react-native-calendars';\r\nimport moment from 'moment';\r\n// import * as Calendar from 'expo-calendar';\r\n// import * as Localization from 'expo-localization';\r\n// import Constants from 'expo-constants';\r\nimport DateTimePicker from 'react-native-modal-datetime-picker';\r\nimport uuid from 'uuid';\r\nimport { Context } from '../../utils/Context';\r\nclass CreateTask extends React.PureComponent {\r\n  state = {\r\n    isDateTimePickerVisible: false,\r\n    visibleHeight: Dimensions.get('window').height,\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Keyboard.removeListener('keyboardDidShow', this._keyboardDidShow);\r\n    Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);\r\n  }\r\n\r\n  _keyboardDidShow = e => {\r\n    this.setState({\r\n      keyboardHeight: e.endCoordinates.height,\r\n      visibleHeight:\r\n        Dimensions.get('window').height - e.endCoordinates.height - 30,\r\n    });\r\n  };\r\n\r\n  _keyboardDidHide = () => {\r\n    this.setState({\r\n      visibleHeight: Dimensions.get('window').height,\r\n    });\r\n  };\r\n  _showDateTimePicker = () => this.setState({ isDateTimePickerVisible: true });\r\n\r\n  _hideDateTimePicker = () => this.setState({ isDateTimePickerVisible: false });\r\n\r\n\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    const { isDateTimePickerVisible, visibleHeight } = this.state;\r\n    console.log(this.props);\r\n    return (\r\n      <SafeAreaView style={{ flex: 1, flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Context.Consumer>\r\n          {value => (\r\n            <>\r\n              <DateTimePicker\r\n                isVisible={isDateTimePickerVisible}\r\n                onConfirm={this._handleDatePicked}\r\n                onCancel={this._hideDateTimePicker}\r\n                mode=\"time\"\r\n              />\r\n\r\n              <View>\r\n                <View\r\n                  style={{\r\n                    height: visibleHeight,\r\n                  }}\r\n                >\r\n                  <ScrollView\r\n                    contentContainerStyle={{\r\n                      paddingBottom: 100,\r\n                    }}\r\n                  >\r\n                    <View style={styles.calenderContainer}>\r\n                      <CalendarList\r\n                        style={{\r\n                          width: 350,\r\n                          height: 350,\r\n                        }}\r\n                        current={currentDay}\r\n                        minDate={moment().format()}\r\n                        horizontal\r\n                        pastScrollRange={0}\r\n                        pagingEnabled\r\n                        calendarWidth={350}\r\n                        onDayPress={day => {\r\n                          this.setState({\r\n                            selectedDay: {\r\n                              [day.dateString]: {\r\n                                selected: true,\r\n                                selectedColor: '#2E66E7',\r\n                              },\r\n                            },\r\n                            currentDay: day.dateString,\r\n                            alarmTime: day.dateString,\r\n                          });\r\n                        }}\r\n                        monthFormat=\"yyyy MMMM\"\r\n                        hideArrows\r\n                        markingType=\"simple\"\r\n                        theme={{\r\n                          selectedDayBackgroundColor: '#2E66E7',\r\n                          selectedDayTextColor: '#ffffff',\r\n                          todayTextColor: '#2E66E7',\r\n                          backgroundColor: '#eaeef7',\r\n                          calendarBackground: '#eaeef7',\r\n                          textDisabledColor: '#d9dbe0',\r\n                        }}\r\n                        markedDates={selectedDay}\r\n                      />\r\n                    </View>\r\n                    <View>\r\n                      <TextInput\r\n                        style={styles.title}\r\n                        onChangeText={text => this.setState({ taskText: text })}\r\n                        value={taskText}\r\n                        placeholder=\"What do you need to do?\"\r\n                      />\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 14,\r\n                          color: '#BDC6D8',\r\n                          marginVertical: 10,\r\n                        }}\r\n                      >\r\n                        Suggestion\r\n                    </Text>\r\n                      <View style={{ flexDirection: 'row' }}>\r\n                        <View style={styles.readBook}>\r\n                          <Text style={{ textAlign: 'center', fontSize: 14 }}>\r\n                            Read book\r\n                        </Text>\r\n                        </View>\r\n                        <View style={styles.design}>\r\n                          <Text style={{ textAlign: 'center', fontSize: 14 }}>\r\n                            Design\r\n                        </Text>\r\n                        </View>\r\n                        <View style={styles.learn}>\r\n                          <Text style={{ textAlign: 'center', fontSize: 14 }}>\r\n                            Learn\r\n                        </Text>\r\n                        </View>\r\n                      </View>\r\n                      <View />\r\n                      <View>\r\n                        <Text style={styles.notes}>Notes</Text>\r\n                        <TextInput\r\n                          style={{\r\n                            height: 25,\r\n                            fontSize: 19,\r\n                            marginTop: 3,\r\n                          }}\r\n                          onChangeText={text =>\r\n                            this.setState({ notesText: text })\r\n                          }\r\n                          value={notesText}\r\n                          placeholder=\"Enter notes about the task.\"\r\n                        />\r\n                      </View>\r\n                      <View style={styles.seperator} />\r\n                      <View>\r\n                        <Text\r\n                          style={{\r\n                            color: '#9CAAC4',\r\n                            fontSize: 16,\r\n                            fontWeight: '600',\r\n                          }}\r\n                        >\r\n                          Times\r\n                      </Text>\r\n                        <TouchableOpacity\r\n                          onPress={() => this._showDateTimePicker()}\r\n                          style={{\r\n                            height: 25,\r\n                            marginTop: 3,\r\n                          }}\r\n                        >\r\n                          <Text style={{ fontSize: 19 }}>\r\n                            {moment(alarmTime).format('h:mm A')}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                      <View style={styles.seperator} />\r\n                      <View\r\n                        style={{\r\n                          flexDirection: 'row',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                        }}\r\n                      >\r\n                        <View>\r\n                          <Text\r\n                            style={{\r\n                              color: '#9CAAC4',\r\n                              fontSize: 16,\r\n                              fontWeight: '600',\r\n                            }}\r\n                          >\r\n                            Alarm\r\n                        </Text>\r\n                          <View\r\n                            style={{\r\n                              height: 25,\r\n                              marginTop: 3,\r\n                            }}\r\n                          >\r\n                            <Text style={{ fontSize: 19 }}>\r\n                              {moment(alarmTime).format('h:mm A')}\r\n                            </Text>\r\n                          </View>\r\n                        </View>\r\n                        <Switch\r\n                          value={isAlarmSet}\r\n                          onValueChange={this.handleAlarmSet}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                    <TouchableOpacity\r\n                      disabled={taskText === ''}\r\n                      style={[\r\n                        styles.createTaskButton,\r\n                        {\r\n                          backgroundColor:\r\n                            taskText === ''\r\n                              ? 'rgba(46, 102, 231,0.5)'\r\n                              : '#2E66E7',\r\n                        },\r\n                      ]}\r\n                      onPress={async () => {\r\n                        if (isAlarmSet) {\r\n                          await this.synchronizeCalendar(value);\r\n                        }\r\n                        if (!isAlarmSet) {\r\n                          this._handleCreateEventData(value);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 18,\r\n                          textAlign: 'center',\r\n                          color: '#fff',\r\n                        }}\r\n                      >\r\n                        ADD YOUR TASK\r\n                    </Text>\r\n                    </TouchableOpacity>\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </>\r\n          )}\r\n        </Context.Consumer>\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CreateTask);"]},"metadata":{},"sourceType":"module"}