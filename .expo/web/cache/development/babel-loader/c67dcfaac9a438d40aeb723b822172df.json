{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Summary\\\\SummaryPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport dva, { connect } from 'dva';\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nvar data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n  datasets: [{\n    data: [20, 45, 28, 80, 99, 43],\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(134, 65, 244, \" + opacity + \")\";\n    },\n    strokeWidth: 2\n  }],\n  legend: [\"Rainy Days\"]\n};\n\nvar SummaryPage = function (_React$PureComponent) {\n  _inherits(SummaryPage, _React$PureComponent);\n\n  var _super = _createSuper(SummaryPage);\n\n  function SummaryPage() {\n    var _this;\n\n    _classCallCheck(this, SummaryPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SummaryPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, \"Bezier Line Chart\"), React.createElement(LineChart, {\n        data: {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n          datasets: [{\n            data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n          }]\n        },\n        width: Dimensions.get(\"window\").width,\n        height: 220,\n        yAxisLabel: \"$\",\n        yAxisSuffix: \"k\",\n        yAxisInterval: 1,\n        chartConfig: {\n          backgroundColor: \"#e26a00\",\n          backgroundGradientFrom: \"#fb8c00\",\n          backgroundGradientTo: \"#ffa726\",\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: \"6\",\n            strokeWidth: \"2\",\n            stroke: \"#ffa726\"\n          }\n        },\n        bezier: true,\n        style: {\n          marginVertical: 8,\n          borderRadius: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), React.createElement(LineChart, {\n        data: data,\n        width: screenWidth,\n        height: 220,\n        chartConfig: chartConfig,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SummaryPage;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(SummaryPage);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Summary/SummaryPage.js"],"names":["React","dva","connect","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","data","labels","datasets","color","opacity","strokeWidth","legend","SummaryPage","state","props","dispatch","effects","Math","random","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","marginVertical","screenWidth","chartConfig","PureComponent","loading"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  SafeAreaView, Text, View,\r\n  Dimensions\r\n} from 'react-native';\r\nimport dva, { connect } from 'dva';\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart\r\n} from \"react-native-chart-kit\";\r\n\r\nconst data = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n  datasets: [\r\n    {\r\n      data: [20, 45, 28, 80, 99, 43],\r\n      color: (opacity = 1) => `rgba(134, 65, 244, ${opacity})`, // optional\r\n      strokeWidth: 2 // optional\r\n    }\r\n  ],\r\n  legend: [\"Rainy Days\"] // optional\r\n};\r\nclass SummaryPage extends React.PureComponent {\r\n  state = {\r\n\r\n  }\r\n\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    return (\r\n      <View>\r\n        <Text>Bezier Line Chart</Text>\r\n        <LineChart\r\n          data={{\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100\r\n                ]\r\n              }\r\n            ]\r\n          }}\r\n          width={Dimensions.get(\"window\").width} // from react-native\r\n          height={220}\r\n          yAxisLabel=\"$\"\r\n          yAxisSuffix=\"k\"\r\n          yAxisInterval={1} // optional, defaults to 1\r\n          chartConfig={{\r\n            backgroundColor: \"#e26a00\",\r\n            backgroundGradientFrom: \"#fb8c00\",\r\n            backgroundGradientTo: \"#ffa726\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16\r\n            },\r\n            propsForDots: {\r\n              r: \"6\",\r\n              strokeWidth: \"2\",\r\n              stroke: \"#ffa726\"\r\n            }\r\n          }}\r\n          bezier\r\n          style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16\r\n          }}\r\n        />\r\n        <LineChart\r\n          data={data}\r\n          width={screenWidth}\r\n          height={220}\r\n          chartConfig={chartConfig}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(SummaryPage);"]},"metadata":{},"sourceType":"module"}