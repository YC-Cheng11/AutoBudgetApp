{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\data\\\\TodoStore.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport moment from 'moment';\nimport { Context } from \"../../utils/Context\";\n\nvar TodoStore = function (_Component) {\n  _inherits(TodoStore, _Component);\n\n  var _super = _createSuper(TodoStore);\n\n  function TodoStore() {\n    var _this;\n\n    _classCallCheck(this, TodoStore);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      todo: [],\n      currentDate: moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD'),\n      updateTodo: function updateTodo(item) {\n        return _regeneratorRuntime.async(function updateTodo$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(_this._updateTodo(item));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      deleteTodo: function deleteTodo(item) {\n        return _regeneratorRuntime.async(function deleteTodo$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(_this._deleteTodo(item));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      updateSelectedTask: function updateSelectedTask(item) {\n        return _regeneratorRuntime.async(function updateSelectedTask$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(_this._updateSelectedTask(item));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      deleteSelectedTask: function deleteSelectedTask(item) {\n        return _regeneratorRuntime.async(function deleteSelectedTask$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _regeneratorRuntime.awrap(_this._deleteSelectedTask(item));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      updateDate: function updateDate(day) {\n        return _regeneratorRuntime.async(function updateDate$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regeneratorRuntime.awrap(_this._updateCurrentDate(day));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n\n    _this._deleteSelectedTask = function _callee(item) {\n      var previousTodo, newTodo, checkForEmpty;\n      return _regeneratorRuntime.async(function _callee$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              previousTodo = _toConsumableArray(_this.state.todo);\n              newTodo = previousTodo.map(function (data) {\n                if (item.date === data.date) {\n                  var previousTodoList = _toConsumableArray(data.todoList);\n\n                  var newTodoList = previousTodoList.filter(function (list) {\n                    if (list.key === item.todo.key) {\n                      return false;\n                    }\n\n                    return true;\n                  });\n                  data.todoList = newTodoList;\n                  return data;\n                }\n\n                return data;\n              });\n              checkForEmpty = newTodo.filter(function (data) {\n                if (data.todoList.length === 0) {\n                  return false;\n                }\n\n                return true;\n              });\n              _context6.prev = 3;\n              _context6.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(checkForEmpty)));\n\n            case 6:\n              _this.setState({\n                todo: checkForEmpty\n              });\n\n              _context6.next = 11;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](3);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[3, 9]], Promise);\n    };\n\n    _this._updateSelectedTask = function _callee2(item) {\n      var previousTodo, newTodo;\n      return _regeneratorRuntime.async(function _callee2$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              previousTodo = _toConsumableArray(_this.state.todo);\n              newTodo = previousTodo.map(function (data) {\n                if (item.date === data.date) {\n                  var previousTodoList = _toConsumableArray(data.todoList);\n\n                  var newTodoList = previousTodoList.map(function (list) {\n                    if (list.key === item.todo.key) {\n                      return item.todo;\n                    }\n\n                    return list;\n                  });\n                  data.todoList = newTodoList;\n                  return data;\n                }\n\n                return data;\n              });\n              _context7.prev = 2;\n              _context7.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(newTodo)));\n\n            case 5:\n              _this.setState({\n                todo: newTodo\n              });\n\n              _context7.next = 10;\n              break;\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](2);\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[2, 8]], Promise);\n    };\n\n    _this._updateTodo = function _callee3(item) {\n      var datePresent, updatedTodo, newTodo, jsonValue;\n      return _regeneratorRuntime.async(function _callee3$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log(\"update todo\");\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', \"testing\"));\n\n            case 3:\n              datePresent = _this.state.todo.find(function (data) {\n                if (data.date === item.date) {\n                  return true;\n                }\n              });\n\n              if (!datePresent) {\n                _context8.next = 17;\n                break;\n              }\n\n              updatedTodo = _this.state.todo.map(function (data) {\n                if (datePresent.date === data.date) {\n                  data.todoList = [].concat(_toConsumableArray(data.todoList), _toConsumableArray(item.todoList));\n                  return data;\n                }\n\n                return data;\n              });\n              _context8.prev = 6;\n              _context8.next = 9;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', JSON.stringify(updatedTodo)));\n\n            case 9:\n              _this.setState({\n                todo: updatedTodo\n              });\n\n              _context8.next = 15;\n              break;\n\n            case 12:\n              _context8.prev = 12;\n              _context8.t0 = _context8[\"catch\"](6);\n              console.log(_context8.t0);\n\n            case 15:\n              _context8.next = 31;\n              break;\n\n            case 17:\n              newTodo = [].concat(_toConsumableArray(_this.state.todo), [item]);\n              console.log(\"newTodo\");\n              console.log(JSON.stringify(newTodo));\n              jsonValue = JSON.stringify(newTodo);\n              _context8.prev = 21;\n              _context8.next = 24;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('TODO', jsonValue));\n\n            case 24:\n              AsyncStorage.setItem('TODO', jsonValue, function () {\n                console.log(\"newTodo 2\");\n                console.log(jsonValue);\n              });\n\n              _this.setState({\n                todo: newTodo\n              });\n\n              _context8.next = 31;\n              break;\n\n            case 28:\n              _context8.prev = 28;\n              _context8.t1 = _context8[\"catch\"](21);\n              console.log(_context8.t1);\n\n            case 31:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[6, 12], [21, 28]], Promise);\n    };\n\n    _this._deleteTodo = function () {};\n\n    _this._updateCurrentDate = function _callee4(day) {\n      return _regeneratorRuntime.async(function _callee4$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('currentDate', day, function () {\n                console.log(day);\n              }));\n\n            case 3:\n              _this.setState({\n                currentDate: day\n              });\n\n              _context9.next = 9;\n              break;\n\n            case 6:\n              _context9.prev = 6;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.log(_context9.t0);\n\n            case 9:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoStore, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var todo;\n      return _regeneratorRuntime.async(function componentWillMount$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('TODO'));\n\n            case 3:\n              todo = _context10.sent;\n\n              if (todo !== null) {\n                this.setState({\n                  todo: JSON.parse(todo)\n                });\n              }\n\n              _context10.next = 9;\n              break;\n\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Context.Provider, {\n        value: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return TodoStore;\n}(Component);\n\nexport { TodoStore as default };","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/data/TodoStore.js"],"names":["React","Component","AsyncStorage","moment","Context","TodoStore","state","todo","currentDate","format","updateTodo","item","_updateTodo","deleteTodo","_deleteTodo","updateSelectedTask","_updateSelectedTask","deleteSelectedTask","_deleteSelectedTask","updateDate","day","_updateCurrentDate","previousTodo","newTodo","map","data","date","previousTodoList","todoList","newTodoList","filter","list","key","checkForEmpty","length","setItem","JSON","stringify","setState","console","log","datePresent","find","updatedTodo","jsonValue","getItem","parse","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport moment from 'moment';\r\nimport { Context } from '../../utils/Context';\r\nexport default class TodoStore extends Component {\r\n  state = {\r\n    todo: [],\r\n    currentDate: `${moment().format('YYYY')}-${moment().format(\r\n      'MM'\r\n    )}-${moment().format('DD')}`,\r\n    updateTodo: async item => {\r\n      await this._updateTodo(item);\r\n    },\r\n    deleteTodo: async item => {\r\n      await this._deleteTodo(item);\r\n    },\r\n    updateSelectedTask: async item => {\r\n      await this._updateSelectedTask(item);\r\n    },\r\n    deleteSelectedTask: async item => {\r\n      await this._deleteSelectedTask(item);\r\n    },\r\n    updateDate: async day =>{\r\n      await this._updateCurrentDate(day);\r\n    }\r\n  };\r\n\r\n  _deleteSelectedTask = async item => {\r\n    const previousTodo = [...this.state.todo];\r\n    const newTodo = previousTodo.map(data => {\r\n      if (item.date === data.date) {\r\n        const previousTodoList = [...data.todoList];\r\n        const newTodoList = previousTodoList.filter(list => {\r\n          if (list.key === item.todo.key) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        data.todoList = newTodoList;\r\n        return data;\r\n      }\r\n      return data;\r\n    });\r\n    const checkForEmpty = newTodo.filter(data => {\r\n      if (data.todoList.length === 0) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    try {\r\n      await AsyncStorage.setItem('TODO', JSON.stringify(checkForEmpty));\r\n      this.setState({\r\n        todo: checkForEmpty,\r\n      });\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  _updateSelectedTask = async item => {\r\n    const previousTodo = [...this.state.todo];\r\n    const newTodo = previousTodo.map(data => {\r\n      if (item.date === data.date) {\r\n        const previousTodoList = [...data.todoList];\r\n        const newTodoList = previousTodoList.map(list => {\r\n          if (list.key === item.todo.key) {\r\n            return item.todo;\r\n          }\r\n          return list;\r\n        });\r\n        data.todoList = newTodoList;\r\n        return data;\r\n      }\r\n      return data;\r\n    });\r\n    try {\r\n      await AsyncStorage.setItem('TODO', JSON.stringify(newTodo));\r\n      this.setState({\r\n        todo: newTodo,\r\n      });\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  async componentWillMount() {\r\n    try {\r\n      const todo = await AsyncStorage.getItem('TODO');\r\n      if (todo !== null) {\r\n        this.setState({\r\n          todo: JSON.parse(todo),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  }\r\n\r\n  _updateTodo = async item => {\r\n    console.log(\"update todo\")\r\n    await AsyncStorage.setItem('TODO', \"testing\");\r\n    const datePresent = this.state.todo.find(data => {\r\n      if (data.date === item.date) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    if (datePresent) {\r\n      const updatedTodo = this.state.todo.map(data => {\r\n        if (datePresent.date === data.date) {\r\n          data.todoList = [...data.todoList, ...item.todoList];\r\n          return data;\r\n        }\r\n        return data;\r\n      });\r\n      try {\r\n        await AsyncStorage.setItem('TODO', JSON.stringify(updatedTodo));\r\n\r\n        this.setState({\r\n          todo: updatedTodo,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        // Error saving data\r\n      }\r\n    } else {\r\n      const newTodo = [...this.state.todo, item];\r\n      console.log(\"newTodo\");\r\n      console.log(JSON.stringify(newTodo));\r\n      const jsonValue = JSON.stringify(newTodo);\r\n      try {\r\n        await AsyncStorage.setItem('TODO', jsonValue);\r\n        AsyncStorage.setItem('TODO', jsonValue, () => {\r\n          console.log(\"newTodo 2\");\r\n          console.log(jsonValue);\r\n        })\r\n        this.setState({\r\n          todo: newTodo,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        // Error saving data\r\n      }\r\n    }\r\n  };\r\n\r\n  _deleteTodo = () => { };\r\n\r\n\r\n  _updateCurrentDate = async (day) => {\r\n    try {\r\n      await AsyncStorage.setItem('currentDate', day, () => {\r\n        console.log(day);\r\n      });\r\n      this.setState({ currentDate: day })\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}