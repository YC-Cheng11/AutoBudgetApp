{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\pages\\\\Calendar\\\\CreateTaskPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dva, { connect } from 'dva';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport moment from 'moment';\nimport Constants from 'expo-constants';\nimport uuid from 'uuid';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport ExpensePage from \"./ExpensePage\";\nimport IncomePage from \"./IncomePage\";\nvar styles = StyleSheet.create({\n  createTaskButton: {\n    width: 252,\n    height: 48,\n    alignSelf: 'center',\n    marginTop: 40,\n    borderRadius: 5,\n    justifyContent: 'center'\n  },\n  seperator: {\n    height: 0.5,\n    width: '100%',\n    backgroundColor: '#979797',\n    alignSelf: 'center',\n    marginVertical: 20\n  },\n  notes: {\n    color: '#9CAAC4',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  notesContent: {\n    height: 0.5,\n    width: '100%',\n    backgroundColor: '#979797',\n    alignSelf: 'center',\n    marginVertical: 20\n  },\n  learn: {\n    height: 23,\n    width: 51,\n    backgroundColor: '#F8D557',\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  design: {\n    height: 23,\n    width: 59,\n    backgroundColor: '#62CCFB',\n    justifyContent: 'center',\n    borderRadius: 5,\n    marginRight: 7\n  },\n  readBook: {\n    height: 23,\n    width: 83,\n    backgroundColor: '#4CD565',\n    justifyContent: 'center',\n    borderRadius: 5,\n    marginRight: 7\n  },\n  title: {\n    height: 25,\n    borderColor: '#5DD976',\n    borderLeftWidth: 1,\n    paddingLeft: 8,\n    fontSize: 19\n  },\n  taskContainer: {\n    marginTop: 30,\n    height: 400,\n    width: 327,\n    alignSelf: 'center',\n    borderRadius: 20,\n    shadowColor: '#2E66E7',\n    backgroundColor: '#ffffff',\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    shadowRadius: 20,\n    shadowOpacity: 0.2,\n    elevation: 5,\n    padding: 22\n  },\n  calenderContainer: {\n    marginTop: 30,\n    width: 350,\n    height: 350,\n    alignSelf: 'center'\n  },\n  newTask: {\n    alignSelf: 'center',\n    fontSize: 20,\n    width: 120,\n    height: 25,\n    textAlign: 'center'\n  },\n  backButton: {\n    flexDirection: 'row',\n    marginTop: 60,\n    width: '100%',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#eaeef7'\n  }\n});\nvar Tab = createMaterialTopTabNavigator();\n\nvar CreateTask = function (_React$PureComponent) {\n  _inherits(CreateTask, _React$PureComponent);\n\n  var _super = _createSuper(CreateTask);\n\n  function CreateTask() {\n    var _this;\n\n    _classCallCheck(this, CreateTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedDay: _defineProperty({}, moment().format('YYYY') + \"-\" + moment().format('MM') + \"-\" + moment().format('DD'), {\n        selected: true,\n        selectedColor: '#2E66E7'\n      }),\n      currentDay: moment().format(),\n      taskText: '',\n      notesText: '',\n      keyboardHeight: 0,\n      visibleHeight: Dimensions.get('window').height,\n      alarmTime: moment().format(),\n      isDateTimePickerVisible: false,\n      timeType: '',\n      creatTodo: {},\n      createEventAsyncRes: ''\n    };\n\n    _this._keyboardDidShow = function (e) {\n      _this.setState({\n        keyboardHeight: e.endCoordinates.height,\n        visibleHeight: Dimensions.get('window').height - e.endCoordinates.height - 30\n      });\n    };\n\n    _this._keyboardDidHide = function () {\n      _this.setState({\n        visibleHeight: Dimensions.get('window').height\n      });\n    };\n\n    _this._showDateTimePicker = function () {\n      return _this.setState({\n        isDateTimePickerVisible: true\n      });\n    };\n\n    _this._hideDateTimePicker = function () {\n      return _this.setState({\n        isDateTimePickerVisible: false\n      });\n    };\n\n    _this._handleCreateEventData = function _callee(value) {\n      var _assertThisInitialize, _assertThisInitialize2, taskText, notesText, _assertThisInitialize3, navigation, route, _route$params, currentDate, updateCurrentTask, createTodo;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _assertThisInitialize = _assertThisInitialized(_this), _assertThisInitialize2 = _assertThisInitialize.state, taskText = _assertThisInitialize2.taskText, notesText = _assertThisInitialize2.notesText, _assertThisInitialize3 = _assertThisInitialize.props, navigation = _assertThisInitialize3.navigation, route = _assertThisInitialize3.route;\n              _route$params = route.params, currentDate = _route$params.currentDate, updateCurrentTask = _route$params.updateCurrentTask;\n              createTodo = {\n                key: uuid(),\n                date: currentDate,\n                todoList: [{\n                  key: uuid(),\n                  title: taskText,\n                  notes: notesText,\n                  color: \"rgb(\" + Math.floor(Math.random() * Math.floor(256)) + \",\" + Math.floor(Math.random() * Math.floor(256)) + \",\" + Math.floor(Math.random() * Math.floor(256)) + \")\"\n                }],\n                markedDot: {\n                  date: currentDate,\n                  dots: [{\n                    key: uuid(),\n                    color: '#2E66E7',\n                    selectedDotColor: '#2E66E7'\n                  }]\n                }\n              };\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(value.updateTodo(createTodo));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(updateCurrentTask(currentDate));\n\n            case 7:\n              navigation.navigate('Calendar');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateTask, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Keyboard.removeListener('keyboardDidShow', this._keyboardDidShow);\n      Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          effects = _this$props.effects;\n      var _this$state = this.state,\n          taskText = _this$state.taskText,\n          notesText = _this$state.notesText,\n          alarmTime = _this$state.alarmTime,\n          isDateTimePickerVisible = _this$state.isDateTimePickerVisible;\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Income\",\n        component: IncomePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Expense\",\n        component: ExpensePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CreateTask;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return {\n    loading: state.loading,\n    effects: state.loading.effects\n  };\n})(CreateTask);","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/pages/Calendar/CreateTaskPage.js"],"names":["React","Component","dva","connect","moment","Constants","uuid","createMaterialTopTabNavigator","ExpensePage","IncomePage","styles","StyleSheet","create","createTaskButton","width","height","alignSelf","marginTop","borderRadius","justifyContent","seperator","backgroundColor","marginVertical","notes","color","fontSize","fontWeight","notesContent","learn","design","marginRight","readBook","title","borderColor","borderLeftWidth","paddingLeft","taskContainer","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","padding","calenderContainer","newTask","textAlign","backButton","flexDirection","alignItems","container","flex","paddingTop","statusBarHeight","Tab","CreateTask","state","selectedDay","format","selected","selectedColor","currentDay","taskText","notesText","keyboardHeight","visibleHeight","Dimensions","get","alarmTime","isDateTimePickerVisible","timeType","creatTodo","createEventAsyncRes","_keyboardDidShow","e","setState","endCoordinates","_keyboardDidHide","_showDateTimePicker","_hideDateTimePicker","_handleCreateEventData","value","props","navigation","route","params","currentDate","updateCurrentTask","createTodo","key","date","todoList","Math","floor","random","markedDot","dots","selectedDotColor","updateTodo","navigate","Keyboard","removeListener","dispatch","effects","PureComponent","loading"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,KAA7B;;;;;;;;;;;;AAcA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,KAAK,EAAE,GADS;AAEhBC,IAAAA,MAAM,EAAE,EAFQ;AAGhBC,IAAAA,SAAS,EAAE,QAHK;AAIhBC,IAAAA,SAAS,EAAE,EAJK;AAKhBC,IAAAA,YAAY,EAAE,CALE;AAMhBC,IAAAA,cAAc,EAAE;AANA,GADa;AAS/BC,EAAAA,SAAS,EAAE;AACTL,IAAAA,MAAM,EAAE,GADC;AAETD,IAAAA,KAAK,EAAE,MAFE;AAGTO,IAAAA,eAAe,EAAE,SAHR;AAITL,IAAAA,SAAS,EAAE,QAJF;AAKTM,IAAAA,cAAc,EAAE;AALP,GAToB;AAgB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAhBwB;AAqB/BC,EAAAA,YAAY,EAAE;AACZZ,IAAAA,MAAM,EAAE,GADI;AAEZD,IAAAA,KAAK,EAAE,MAFK;AAGZO,IAAAA,eAAe,EAAE,SAHL;AAIZL,IAAAA,SAAS,EAAE,QAJC;AAKZM,IAAAA,cAAc,EAAE;AALJ,GArBiB;AA4B/BM,EAAAA,KAAK,EAAE;AACLb,IAAAA,MAAM,EAAE,EADH;AAELD,IAAAA,KAAK,EAAE,EAFF;AAGLO,IAAAA,eAAe,EAAE,SAHZ;AAILF,IAAAA,cAAc,EAAE,QAJX;AAKLD,IAAAA,YAAY,EAAE;AALT,GA5BwB;AAmC/BW,EAAAA,MAAM,EAAE;AACNd,IAAAA,MAAM,EAAE,EADF;AAEND,IAAAA,KAAK,EAAE,EAFD;AAGNO,IAAAA,eAAe,EAAE,SAHX;AAINF,IAAAA,cAAc,EAAE,QAJV;AAKND,IAAAA,YAAY,EAAE,CALR;AAMNY,IAAAA,WAAW,EAAE;AANP,GAnCuB;AA2C/BC,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,MAAM,EAAE,EADA;AAERD,IAAAA,KAAK,EAAE,EAFC;AAGRO,IAAAA,eAAe,EAAE,SAHT;AAIRF,IAAAA,cAAc,EAAE,QAJR;AAKRD,IAAAA,YAAY,EAAE,CALN;AAMRY,IAAAA,WAAW,EAAE;AANL,GA3CqB;AAmD/BE,EAAAA,KAAK,EAAE;AACLjB,IAAAA,MAAM,EAAE,EADH;AAELkB,IAAAA,WAAW,EAAE,SAFR;AAGLC,IAAAA,eAAe,EAAE,CAHZ;AAILC,IAAAA,WAAW,EAAE,CAJR;AAKLV,IAAAA,QAAQ,EAAE;AALL,GAnDwB;AA0D/BW,EAAAA,aAAa,EAAE;AACbnB,IAAAA,SAAS,EAAE,EADE;AAEbF,IAAAA,MAAM,EAAE,GAFK;AAGbD,IAAAA,KAAK,EAAE,GAHM;AAIbE,IAAAA,SAAS,EAAE,QAJE;AAKbE,IAAAA,YAAY,EAAE,EALD;AAMbmB,IAAAA,WAAW,EAAE,SANA;AAObhB,IAAAA,eAAe,EAAE,SAPJ;AAQbiB,IAAAA,YAAY,EAAE;AACZxB,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KARD;AAYbwB,IAAAA,YAAY,EAAE,EAZD;AAabC,IAAAA,aAAa,EAAE,GAbF;AAcbC,IAAAA,SAAS,EAAE,CAdE;AAebC,IAAAA,OAAO,EAAE;AAfI,GA1DgB;AA2E/BC,EAAAA,iBAAiB,EAAE;AACjB1B,IAAAA,SAAS,EAAE,EADM;AAEjBH,IAAAA,KAAK,EAAE,GAFU;AAGjBC,IAAAA,MAAM,EAAE,GAHS;AAIjBC,IAAAA,SAAS,EAAE;AAJM,GA3EY;AAiF/B4B,EAAAA,OAAO,EAAE;AACP5B,IAAAA,SAAS,EAAE,QADJ;AAEPS,IAAAA,QAAQ,EAAE,EAFH;AAGPX,IAAAA,KAAK,EAAE,GAHA;AAIPC,IAAAA,MAAM,EAAE,EAJD;AAKP8B,IAAAA,SAAS,EAAE;AALJ,GAjFsB;AAwF/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,aAAa,EAAE,KADL;AAEV9B,IAAAA,SAAS,EAAE,EAFD;AAGVH,IAAAA,KAAK,EAAE,MAHG;AAIVkC,IAAAA,UAAU,EAAE;AAJF,GAxFmB;AA8F/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE9C,SAAS,CAAC+C,eAFb;AAGT/B,IAAAA,eAAe,EAAE;AAHR;AA9FoB,CAAlB,CAAf;AAoGA,IAAMgC,GAAG,GAAG9C,6BAA6B,EAAzC;;IACM+C,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,sBACLpD,MAAM,GAAGqD,MAAT,CAAgB,MAAhB,CADK,SACsBrD,MAAM,GAAGqD,MAAT,CAAgB,IAAhB,CADtB,SAC+CrD,MAAM,GAAGqD,MAAT,CACtD,IADsD,CAD/C,EAGH;AACJC,QAAAA,QAAQ,EAAE,IADN;AAEJC,QAAAA,aAAa,EAAE;AAFX,OAHG,CADL;AASNC,MAAAA,UAAU,EAAExD,MAAM,GAAGqD,MAAT,EATN;AAUNI,MAAAA,QAAQ,EAAE,EAVJ;AAWNC,MAAAA,SAAS,EAAE,EAXL;AAYNC,MAAAA,cAAc,EAAE,CAZV;AAaNC,MAAAA,aAAa,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBnD,MAblC;AAcNoD,MAAAA,SAAS,EAAE/D,MAAM,GAAGqD,MAAT,EAdL;AAeNW,MAAAA,uBAAuB,EAAE,KAfnB;AAgBNC,MAAAA,QAAQ,EAAE,EAhBJ;AAiBNC,MAAAA,SAAS,EAAE,EAjBL;AAkBNC,MAAAA,mBAAmB,EAAE;AAlBf,K;;UA0BRC,gB,GAAmB,UAAAC,CAAC,EAAI;AACtB,YAAKC,QAAL,CAAc;AACZX,QAAAA,cAAc,EAAEU,CAAC,CAACE,cAAF,CAAiB5D,MADrB;AAEZiD,QAAAA,aAAa,EACXC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBnD,MAAzB,GAAkC0D,CAAC,CAACE,cAAF,CAAiB5D,MAAnD,GAA4D;AAHlD,OAAd;AAKD,K;;UAED6D,gB,GAAmB,YAAM;AACvB,YAAKF,QAAL,CAAc;AACZV,QAAAA,aAAa,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBnD;AAD5B,OAAd;AAGD,K;;UACD8D,mB,GAAsB;AAAA,aAAM,MAAKH,QAAL,CAAc;AAAEN,QAAAA,uBAAuB,EAAE;AAA3B,OAAd,CAAN;AAAA,K;;UAEtBU,mB,GAAsB;AAAA,aAAM,MAAKJ,QAAL,CAAc;AAAEN,QAAAA,uBAAuB,EAAE;AAA3B,OAAd,CAAN;AAAA,K;;UAEtBW,sB,GAAyB,iBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oHAErBzB,KAFqB,EAGnBM,QAHmB,0BAGnBA,QAHmB,EAInBC,SAJmB,0BAInBA,SAJmB,iDAMrBmB,KANqB,EAMZC,UANY,0BAMZA,UANY,EAMAC,KANA,0BAMAA,KANA;AAAA,8BAQoBA,KAAK,CAACC,MAR1B,EAQfC,WARe,iBAQfA,WARe,EAQFC,iBARE,iBAQFA,iBARE;AASjBC,cAAAA,UATiB,GASJ;AACjBC,gBAAAA,GAAG,EAAElF,IAAI,EADQ;AAEjBmF,gBAAAA,IAAI,EAAEJ,WAFW;AAGjBK,gBAAAA,QAAQ,EAAE,CACR;AACEF,kBAAAA,GAAG,EAAElF,IAAI,EADX;AAEE0B,kBAAAA,KAAK,EAAE6B,QAFT;AAGEtC,kBAAAA,KAAK,EAAEuC,SAHT;AAIEtC,kBAAAA,KAAK,WAASmE,IAAI,CAACC,KAAL,CACZD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,GAAX,CADJ,CAAT,SAEAD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,GAAX,CAA3B,CAFA,SAE+CD,IAAI,CAACC,KAAL,CAClDD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,GAAX,CADkC,CAF/C;AAJP,iBADQ,CAHO;AAejBE,gBAAAA,SAAS,EAAE;AACTL,kBAAAA,IAAI,EAAEJ,WADG;AAETU,kBAAAA,IAAI,EAAE,CACJ;AACEP,oBAAAA,GAAG,EAAElF,IAAI,EADX;AAEEkB,oBAAAA,KAAK,EAAE,SAFT;AAGEwE,oBAAAA,gBAAgB,EAAE;AAHpB,mBADI;AAFG;AAfM,eATI;AAAA;AAAA,+CAmCjBhB,KAAK,CAACiB,UAAN,CAAiBV,UAAjB,CAnCiB;;AAAA;AAAA;AAAA,+CAoCjBD,iBAAiB,CAACD,WAAD,CApCA;;AAAA;AAqCvBH,cAAAA,UAAU,CAACgB,QAAX,CAAoB,UAApB;;AArCuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;2CAtBF;AACrBC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2C,KAAK5B,gBAAhD;AACA2B,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2C,KAAKxB,gBAAhD;AACD;;;6BA4DQ;AAAA,wBACuB,KAAKK,KAD5B;AAAA,UACCoB,QADD,eACCA,QADD;AAAA,UACWC,OADX,eACWA,OADX;AAAA,wBAMwB,KAAK/C,KAN7B;AAAA,UAGLM,QAHK,eAGLA,QAHK;AAAA,UAILC,SAJK,eAILA,SAJK;AAAA,UAKLK,SALK,eAKLA,SALK;AAAA,UAMLC,uBANK,eAMLA,uBANK;AAOP,aACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,QAAjB;AAA0B,QAAA,SAAS,EAAE3D,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAED,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAlGsBR,KAAK,CAACuG,a;;AAoG/B,eAAepG,OAAO,CAAC,UAAAoD,KAAK;AAAA,SAAK;AAC/BiD,IAAAA,OAAO,EAAEjD,KAAK,CAACiD,OADgB;AAE/BF,IAAAA,OAAO,EAAE/C,KAAK,CAACiD,OAAN,CAAcF;AAFQ,GAAL;AAAA,CAAN,CAAP,CAGXhD,UAHW,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport dva, { connect } from 'dva';\r\nimport {\r\n  Text,\r\n  Image,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  TextInput,\r\n  Keyboard,\r\n  Switch,\r\n  StyleSheet,\r\n  Alert,\r\n} from 'react-native';\r\nimport moment from 'moment';\r\nimport Constants from 'expo-constants';\r\nimport uuid from 'uuid';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ExpensePage from './ExpensePage';\r\nimport IncomePage from './IncomePage';\r\n\r\nconst styles = StyleSheet.create({\r\n  createTaskButton: {\r\n    width: 252,\r\n    height: 48,\r\n    alignSelf: 'center',\r\n    marginTop: 40,\r\n    borderRadius: 5,\r\n    justifyContent: 'center',\r\n  },\r\n  seperator: {\r\n    height: 0.5,\r\n    width: '100%',\r\n    backgroundColor: '#979797',\r\n    alignSelf: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  notes: {\r\n    color: '#9CAAC4',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  notesContent: {\r\n    height: 0.5,\r\n    width: '100%',\r\n    backgroundColor: '#979797',\r\n    alignSelf: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  learn: {\r\n    height: 23,\r\n    width: 51,\r\n    backgroundColor: '#F8D557',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n  },\r\n  design: {\r\n    height: 23,\r\n    width: 59,\r\n    backgroundColor: '#62CCFB',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n    marginRight: 7,\r\n  },\r\n  readBook: {\r\n    height: 23,\r\n    width: 83,\r\n    backgroundColor: '#4CD565',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n    marginRight: 7,\r\n  },\r\n  title: {\r\n    height: 25,\r\n    borderColor: '#5DD976',\r\n    borderLeftWidth: 1,\r\n    paddingLeft: 8,\r\n    fontSize: 19,\r\n  },\r\n  taskContainer: {\r\n    marginTop: 30,\r\n    height: 400,\r\n    width: 327,\r\n    alignSelf: 'center',\r\n    borderRadius: 20,\r\n    shadowColor: '#2E66E7',\r\n    backgroundColor: '#ffffff',\r\n    shadowOffset: {\r\n      width: 3,\r\n      height: 3,\r\n    },\r\n    shadowRadius: 20,\r\n    shadowOpacity: 0.2,\r\n    elevation: 5,\r\n    padding: 22,\r\n  },\r\n  calenderContainer: {\r\n    marginTop: 30,\r\n    width: 350,\r\n    height: 350,\r\n    alignSelf: 'center',\r\n  },\r\n  newTask: {\r\n    alignSelf: 'center',\r\n    fontSize: 20,\r\n    width: 120,\r\n    height: 25,\r\n    textAlign: 'center',\r\n  },\r\n  backButton: {\r\n    flexDirection: 'row',\r\n    marginTop: 60,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#eaeef7',\r\n  },\r\n});\r\nconst Tab = createMaterialTopTabNavigator();\r\nclass CreateTask extends React.PureComponent {\r\n  state = {\r\n    selectedDay: {\r\n      [`${moment().format('YYYY')}-${moment().format('MM')}-${moment().format(\r\n        'DD'\r\n      )}`]: {\r\n        selected: true,\r\n        selectedColor: '#2E66E7',\r\n      },\r\n    },\r\n    currentDay: moment().format(),\r\n    taskText: '',\r\n    notesText: '',\r\n    keyboardHeight: 0,\r\n    visibleHeight: Dimensions.get('window').height,\r\n    alarmTime: moment().format(),\r\n    isDateTimePickerVisible: false,\r\n    timeType: '',\r\n    creatTodo: {},\r\n    createEventAsyncRes: '',\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Keyboard.removeListener('keyboardDidShow', this._keyboardDidShow);\r\n    Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);\r\n  }\r\n\r\n  _keyboardDidShow = e => {\r\n    this.setState({\r\n      keyboardHeight: e.endCoordinates.height,\r\n      visibleHeight:\r\n        Dimensions.get('window').height - e.endCoordinates.height - 30,\r\n    });\r\n  };\r\n\r\n  _keyboardDidHide = () => {\r\n    this.setState({\r\n      visibleHeight: Dimensions.get('window').height,\r\n    });\r\n  };\r\n  _showDateTimePicker = () => this.setState({ isDateTimePickerVisible: true });\r\n\r\n  _hideDateTimePicker = () => this.setState({ isDateTimePickerVisible: false });\r\n\r\n  _handleCreateEventData = async value => {\r\n    const {\r\n      state: {\r\n        taskText,\r\n        notesText,\r\n      },\r\n      props: { navigation, route },\r\n    } = this;\r\n    const { currentDate, updateCurrentTask } = route.params;\r\n    const createTodo = {\r\n      key: uuid(),\r\n      date: currentDate,\r\n      todoList: [\r\n        {\r\n          key: uuid(),\r\n          title: taskText,\r\n          notes: notesText,\r\n          color: `rgb(${Math.floor(\r\n            Math.random() * Math.floor(256)\r\n          )},${Math.floor(Math.random() * Math.floor(256))},${Math.floor(\r\n            Math.random() * Math.floor(256)\r\n          )})`,\r\n        },\r\n      ],\r\n      markedDot: {\r\n        date: currentDate,\r\n        dots: [\r\n          {\r\n            key: uuid(),\r\n            color: '#2E66E7',\r\n            selectedDotColor: '#2E66E7',\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    await value.updateTodo(createTodo);\r\n    await updateCurrentTask(currentDate);\r\n    navigation.navigate('Calendar');\r\n  };\r\n\r\n  // Local path to file on the device\r\n  render() {\r\n    const { dispatch, effects } = this.props;\r\n    const {\r\n      taskText,\r\n      notesText,\r\n      alarmTime,\r\n      isDateTimePickerVisible, } = this.state;\r\n    return (\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Income\" component={IncomePage} />\r\n        <Tab.Screen name=\"Expense\" component={ExpensePage} />\r\n      </Tab.Navigator>\r\n    )\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  loading: state.loading,\r\n  effects: state.loading.effects\r\n}))(CreateTask);"]},"metadata":{},"sourceType":"module"}