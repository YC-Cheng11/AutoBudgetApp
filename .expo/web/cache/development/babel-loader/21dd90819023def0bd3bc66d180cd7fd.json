{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\UWE\\\\FYP\\\\AutoBudgetApplication\\\\node_modules\\\\react-native-select-lists\\\\src\\\\list.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nvar window = Dimensions.get('window');\nvar AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);\n\nvar List = function (_Component) {\n  _inherits(List, _Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _super.call(this);\n    _this.state = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      list: 0\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"measureProps\",\n    value: function measureProps() {\n      var _this2 = this;\n\n      this.refs.list.measure(function (x, y, width, height) {\n        _this2.setState({\n          list: height\n        });\n      });\n      this.props.select.measureInWindow(function (x, y, width, height) {\n        _this2.setState({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          position = _this$props.position;\n      return React.createElement(Modal, {\n        transparent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onOverlayPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        onLayout: this.measureProps.bind(this),\n        ref: \"list\",\n        style: [styles.list, {\n          width: this.state.width,\n          maxHeight: this.props.height,\n          left: this.state.x,\n          top: this.state.y + (position === 'down' ? this.state.height : -this.state.list),\n          opacity: this.state.list ? 1 : 0\n        }, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, React.createElement(AnimatedScrollView, {\n        automaticallyAdjustContentInsets: false,\n        bounces: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, children.map(function (item, index) {\n        return React.createElement(TouchableWithoutFeedback, {\n          key: index,\n          onPress: function onPress() {\n            _this3.props.onOptionPressed(item.props.value, item.props.children);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }, item));\n      })))));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar styles = StyleSheet.create({\n  list: {\n    position: 'absolute',\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    backgroundColor: 'white',\n    borderRadius: 2\n  }\n});\nmodule.exports = List;","map":{"version":3,"sources":["D:/UWE/FYP/AutoBudgetApplication/node_modules/react-native-select-lists/src/list.js"],"names":["React","Component","window","Dimensions","get","AnimatedScrollView","Animated","createAnimatedComponent","ScrollView","List","state","x","y","width","height","list","refs","measure","setState","props","select","measureInWindow","children","position","onOverlayPress","flex","measureProps","bind","styles","maxHeight","left","top","opacity","style","map","item","index","onOptionPressed","value","StyleSheet","create","borderWidth","borderColor","backgroundColor","borderRadius","module","exports"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Modal, TouchableWithoutFeedback, Dimensions, Text, ScrollView, Animated } from 'react-native';\n\nconst window = Dimensions.get('window');\nconst AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);\n\nclass List extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      list: 0,\n    }\n  }\n\n  measureProps() {\n    this.refs.list.measure((x, y, width, height) => {\n      this.setState({\n        list: height,\n      });\n    });\n    this.props.select.measureInWindow((x, y, width, height) => {\n      this.setState({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n      });\n    });\n  }\n\n  render() {\n    const { children, position } = this.props;\n\n    return (\n      <Modal\n        transparent={true}>\n        <TouchableWithoutFeedback onPress={this.props.onOverlayPress}>\n          <View style={{ flex: 1}}></View>\n        </TouchableWithoutFeedback>\n        <View\n          onLayout={this.measureProps.bind(this)}\n          ref=\"list\"\n          style={[\n            styles.list,\n            {\n              width: this.state.width,\n              maxHeight: this.props.height,\n              left: this.state.x,\n              top: this.state.y + (position === 'down' ? this.state.height : -this.state.list),\n              opacity: this.state.list ? 1 : 0,\n            },\n            this.props.style\n          ]}>\n          <View>\n            <AnimatedScrollView\n              automaticallyAdjustContentInsets={false}\n              bounces={false}>\n                {\n                  children.map((item, index) => {\n                    return (\n                      <TouchableWithoutFeedback\n                        key={index}\n                        onPress={() => { this.props.onOptionPressed(item.props.value, item.props.children)}}\n                        >\n                        <View>\n                          {item}\n                        </View>\n                      </TouchableWithoutFeedback>\n                    );\n                  })\n                }\n            </AnimatedScrollView>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    position: 'absolute',\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    backgroundColor: 'white',\n    borderRadius: 2,\n  },\n});\n\nmodule.exports = List;\n"]},"metadata":{},"sourceType":"module"}